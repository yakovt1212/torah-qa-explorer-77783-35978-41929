[{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\api\\git.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\BookmarkButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\BookmarksPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\CommandPalette.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\DevPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\NotesDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\PasukDisplay.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":107,"column":109,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":107,"endColumn":112,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4279,4282],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4279,4282],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":107,"column":171,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":107,"endColumn":174,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4341,4344],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4341,4344],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":144,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":144,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[5698,5701],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[5698,5701],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":153,"column":83,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":153,"endColumn":86,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[5991,5994],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[5991,5994],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":153,"column":122,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":153,"endColumn":125,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[6030,6033],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[6030,6033],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, memo } from \"react\";\r\nimport { ChevronDown, ChevronUp, MessageCircle, MessageSquare } from \"lucide-react\";\r\nimport { FlatPasuk } from \"@/types/torah\";\r\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { toHebrewNumber } from \"@/utils/hebrewNumbers\";\r\nimport { TextHighlighter } from \"@/components/TextHighlighter\";\r\nimport { NotesDialog } from \"@/components/NotesDialog\";\r\nimport { useFontSettings } from \"@/contexts/FontSettingsContext\";\r\nimport { useIsMobile } from \"@/hooks/use-mobile\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface PasukDisplayProps {\r\n  pasuk: FlatPasuk;\r\n  seferId: number;\r\n}\r\n\r\nexport const PasukDisplay = memo(({ pasuk, seferId }: PasukDisplayProps) => {\r\n  const { fontSettings } = useFontSettings();\r\n  const isMobile = useIsMobile();\r\n  \r\n  // Safety check: ensure content exists and is an array\r\n  const content = pasuk.content || [];\r\n  \r\n  const totalQuestions = content.reduce((sum, content) => sum + content.questions.length, 0);\r\n  const totalAnswers = content.reduce(\r\n    (sum, content) => sum + content.questions.reduce((qSum, q) => qSum + q.perushim.length, 0),\r\n    0\r\n  );\r\n  const pasukId = `${pasuk.perek}-${pasuk.pasuk_num}`;\r\n\r\n  if (totalQuestions === 0) return null;\r\n  return (\r\n    <Card className=\"overflow-hidden border-r-4 border-r-accent shadow-md hover:shadow-lg transition-all\">\r\n      <CardHeader className=\"bg-gradient-to-l from-secondary/30 to-card\">\r\n        <div className=\"flex items-start justify-between gap-4\">\r\n          <div className=\"flex-1\">\r\n            <div className=\"flex items-center gap-2 mb-2 justify-between\">\r\n              <NotesDialog pasukId={pasukId} pasukText={pasuk.text} />\r\n              <Badge variant=\"outline\" className=\"font-bold\">\r\n                פרק {toHebrewNumber(pasuk.perek)} פסוק {toHebrewNumber(pasuk.pasuk_num)}\r\n              </Badge>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontFamily: fontSettings.pasukFont,\r\n                fontSize: `${fontSettings.pasukSize}px`,\r\n              }}\r\n            >\r\n              <TextHighlighter text={pasuk.text} pasukId={pasukId} />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex gap-2 shrink-0\">\r\n            <Badge variant=\"secondary\" className=\"gap-1\">\r\n              <MessageCircle className=\"h-3 w-3\" />\r\n              {totalQuestions}\r\n            </Badge>\r\n            <Badge variant=\"secondary\" className=\"gap-1\">\r\n              <MessageSquare className=\"h-3 w-3\" />\r\n              {totalAnswers}\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"pt-4 space-y-4\">\r\n        {content.map((contentItem) =>\r\n          contentItem.questions.length > 0 ? (\r\n            <div key={contentItem.id} className=\"space-y-3\">\r\n              {contentItem.title && (\r\n                <h4 \r\n                  className={cn(\r\n                    \"font-semibold text-primary border-r-2 border-accent pr-3\",\r\n                    \"text-right\",\r\n                    \"text-sm sm:text-base\",\r\n                    \"whitespace-normal\"\r\n                  )}\r\n                  style={{\r\n                    fontFamily: fontSettings.questionFont,\r\n                    fontSize: `${isMobile ? 14 : fontSettings.questionSize}px`,\r\n                    wordBreak: 'break-word',\r\n                    overflowWrap: 'break-word',\r\n                  }}\r\n                >\r\n                  {contentItem.title}\r\n                </h4>\r\n              )}\r\n              {contentItem.questions.map((question) => (\r\n                <QuestionSection \r\n                  key={question.id} \r\n                  question={question} \r\n                  showAnswers={true}\r\n                  isMobile={isMobile}\r\n                  fontSettings={fontSettings}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : null\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nconst QuestionSection = memo(({ question, showAnswers = true, isMobile = false, fontSettings }: { question: any; showAnswers?: boolean; isMobile?: boolean; fontSettings: any }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <Collapsible open={isOpen} onOpenChange={setIsOpen} className=\"space-y-2\">\r\n      <CollapsibleTrigger asChild>\r\n        <Button\r\n          variant=\"ghost\"\r\n          className=\"w-full justify-between p-4 h-auto text-right bg-muted/50 hover:bg-muted\"\r\n        >\r\n          <div className=\"flex items-center gap-2\">\r\n            <Badge variant=\"outline\" className=\"gap-1\">\r\n              <MessageSquare className=\"h-3 w-3\" />\r\n              {question.perushim.length}\r\n            </Badge>\r\n            {isOpen ? <ChevronUp className=\"h-4 w-4 shrink-0\" /> : <ChevronDown className=\"h-4 w-4 shrink-0\" />}\r\n          </div>\r\n          <span \r\n            className={cn(\r\n              \"flex-1 text-right\",\r\n              \"text-sm sm:text-base\",\r\n              \"whitespace-normal\"\r\n            )}\r\n            style={{\r\n              fontFamily: fontSettings.questionFont,\r\n              fontSize: `${isMobile ? 14 : fontSettings.questionSize}px`,\r\n              wordBreak: 'break-word',\r\n              overflowWrap: 'break-word',\r\n            }}\r\n          >\r\n            {question.text}\r\n          </span>\r\n        </Button>\r\n      </CollapsibleTrigger>\r\n\r\n      {showAnswers && (\r\n        <CollapsibleContent className=\"space-y-3 pr-4\">\r\n          {question.perushim.map((perush: any) => (\r\n            <AnswerSection key={perush.id} perush={perush} isMobile={isMobile} fontSettings={fontSettings} />\r\n          ))}\r\n        </CollapsibleContent>\r\n      )}\r\n    </Collapsible>\r\n  );\r\n});\r\n\r\nconst AnswerSection = memo(({ perush, isMobile = false, fontSettings }: { perush: any; isMobile?: boolean; fontSettings: any }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <Collapsible open={isOpen} onOpenChange={setIsOpen}>\r\n      <CollapsibleTrigger asChild>\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          className=\"w-full justify-between mb-2\"\r\n        >\r\n          <Badge variant=\"secondary\" className=\"font-semibold\">\r\n            {perush.mefaresh}\r\n          </Badge>\r\n          <span className=\"flex items-center gap-2\">\r\n            {isOpen ? <ChevronUp className=\"h-3 w-3\" /> : <ChevronDown className=\"h-3 w-3\" />}\r\n          </span>\r\n        </Button>\r\n      </CollapsibleTrigger>\r\n      \r\n      <CollapsibleContent>\r\n        <div className=\"p-4 bg-card rounded-md border-r-2 border-accent\">\r\n          <p \r\n            className={cn(\r\n              \"leading-relaxed text-muted-foreground\",\r\n              \"text-right whitespace-normal\"\r\n            )}\r\n            style={{\r\n              fontFamily: fontSettings.answerFont,\r\n              fontSize: `${isMobile ? 14 : fontSettings.answerSize}px`,\r\n              wordBreak: 'break-word',\r\n              overflowWrap: 'break-word',\r\n            }}\r\n          >\r\n            {perush.text}\r\n          </p>\r\n        </div>\r\n      </CollapsibleContent>\r\n    </Collapsible>\r\n  );\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\QuickJumpDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\QuickSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\SeferSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\Settings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\SkeletonLoader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\TextHighlighter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ThemeCustomizer.tsx","messages":[{"ruleId":null,"message":"Unused eslint-disable directive (no problems were reported from '@typescript-eslint/prefer-as-const').","line":95,"column":22,"severity":1,"nodeType":null,"fix":{"range":[3531,3596],"text":" "}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"import { Palette, Grid3X3, Type, Sparkles, RotateCcw } from 'lucide-react';\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetTrigger,\r\n} from '@/components/ui/sheet';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { useThemePresets } from '@/contexts/ThemePresetsContext';\r\nimport { THEME_PRESETS, HEBREW_FONTS } from '@/data/themePresets';\r\nimport { ThemePreset, BackgroundPattern } from '@/types/theme';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport function ThemeCustomizer() {\r\n  const {\r\n    settings,\r\n    setPreset,\r\n    setBackgroundPattern,\r\n    setPatternOpacity,\r\n    setHebrewFont,\r\n    toggleAnimations,\r\n    setBorderRadius,\r\n    resetToDefault,\r\n  } = useThemePresets();\r\n\r\n  const backgroundPatterns: { value: BackgroundPattern; label: string }[] = [\r\n    { value: 'none', label: 'ללא' },\r\n    { value: 'dots', label: 'נקודות' },\r\n    { value: 'grid', label: 'רשת' },\r\n    { value: 'waves', label: 'גלים' },\r\n    { value: 'paper', label: 'נייר' },\r\n    { value: 'fabric', label: 'בד' },\r\n  ];\r\n\r\n  return (\r\n    <Sheet>\r\n      <SheetTrigger asChild>\r\n        <Button variant=\"outline\" size=\"icon\" className=\"h-9 w-9\">\r\n          <Palette className=\"h-4 w-4\" />\r\n        </Button>\r\n      </SheetTrigger>\r\n      <SheetContent side=\"right\" className=\"w-full sm:w-[400px] overflow-y-auto\">\r\n        <SheetHeader>\r\n          <SheetTitle className=\"flex items-center gap-2\">\r\n            <Palette className=\"h-5 w-5\" />\r\n            התאמה אישית של עיצוב\r\n          </SheetTitle>\r\n          <SheetDescription>\r\n            בחר ערכת צבעים, פונט, ורקע לחוויה מותאמת אישית\r\n          </SheetDescription>\r\n        </SheetHeader>\r\n\r\n        <div className=\"space-y-6 mt-6\">\r\n          {/* Theme Presets */}\r\n          <div className=\"space-y-3\">\r\n            <Label className=\"text-base font-semibold flex items-center gap-2\">\r\n              <Sparkles className=\"h-4 w-4\" />\r\n              ערכת צבעים\r\n            </Label>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              {THEME_PRESETS.map((preset) => (\r\n                <button\r\n                  key={preset.id}\r\n                  onClick={() => setPreset(preset.id as ThemePreset)}\r\n                  className={cn(\r\n                    'p-3 rounded-lg border-2 text-right transition-all hover:scale-105',\r\n                    settings.preset === preset.id\r\n                      ? 'border-primary bg-primary/5'\r\n                      : 'border-border hover:border-primary/50'\r\n                  )}\r\n                >\r\n                  <div className=\"flex items-center justify-between mb-1\">\r\n                    <div className=\"font-medium text-sm\">{preset.name}</div>\r\n                    {settings.preset === preset.id && (\r\n                      <Badge variant=\"default\" className=\"text-xs\">פעיל</Badge>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"text-xs text-muted-foreground\">{preset.description}</div>\r\n                  <div className=\"flex gap-1 mt-2\">\r\n                    {/* Color preview circles - inline styles needed for dynamic colors */}\r\n                    {/* eslint-disable-next-line @typescript-eslint/prefer-as-const */}\r\n                    <div \r\n                      className=\"h-4 w-4 rounded-full border\" \r\n                      style={{ backgroundColor: preset.colors.primary }}\r\n                    />\r\n                    <div \r\n                      className=\"h-4 w-4 rounded-full border\" \r\n                      style={{ backgroundColor: preset.colors.secondary }}\r\n                    />\r\n                    <div \r\n                      className=\"h-4 w-4 rounded-full border\" \r\n                      style={{ backgroundColor: preset.colors.accent }}\r\n                    />\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <Separator />\r\n\r\n          {/* Hebrew Font */}\r\n          <div className=\"space-y-3\">\r\n            <Label className=\"text-base font-semibold flex items-center gap-2\">\r\n              <Type className=\"h-4 w-4\" />\r\n              פונט עברי\r\n            </Label>\r\n            <Select value={settings.hebrewFont} onValueChange={setHebrewFont}>\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {HEBREW_FONTS.map((font) => (\r\n                  <SelectItem key={font.id} value={font.id}>\r\n                    {/* Font preview - inline style needed for dynamic font family */}\r\n                    <span style={{ fontFamily: font.family }}>\r\n                      {font.displayName}\r\n                    </span>\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n            <div className=\"p-4 rounded-lg border bg-card\">\r\n              {/* Font preview - inline style needed for dynamic font family */}\r\n              <p \r\n                className=\"text-center text-lg\"\r\n                style={{ fontFamily: HEBREW_FONTS.find(f => f.id === settings.hebrewFont)?.family }}\r\n              >\r\n                בראשית ברא אלהים את השמים ואת הארץ\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <Separator />\r\n\r\n          {/* Background Pattern */}\r\n          <div className=\"space-y-3\">\r\n            <Label className=\"text-base font-semibold flex items-center gap-2\">\r\n              <Grid3X3 className=\"h-4 w-4\" />\r\n              רקע/טקסטורה\r\n            </Label>\r\n            <Select \r\n              value={settings.backgroundPattern} \r\n              onValueChange={(value) => setBackgroundPattern(value as BackgroundPattern)}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {backgroundPatterns.map((pattern) => (\r\n                  <SelectItem key={pattern.value} value={pattern.value}>\r\n                    {pattern.label}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            {settings.backgroundPattern !== 'none' && (\r\n              <div className=\"space-y-2\">\r\n                <Label className=\"text-sm\">\r\n                  עוצמת הרקע: {settings.patternOpacity}%\r\n                </Label>\r\n                <Slider\r\n                  value={[settings.patternOpacity]}\r\n                  onValueChange={([value]) => setPatternOpacity(value)}\r\n                  min={0}\r\n                  max={20}\r\n                  step={1}\r\n                  className=\"w-full\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <Separator />\r\n\r\n          {/* Border Radius */}\r\n          <div className=\"space-y-3\">\r\n            <Label className=\"text-base font-semibold\">\r\n              עיגול פינות: {settings.borderRadius}px\r\n            </Label>\r\n            <Slider\r\n              value={[settings.borderRadius]}\r\n              onValueChange={([value]) => setBorderRadius(value)}\r\n              min={0}\r\n              max={20}\r\n              step={1}\r\n              className=\"w-full\"\r\n            />\r\n            <div className=\"flex gap-2\">\r\n              {[0, 4, 8, 12, 16].map((radius) => (\r\n                <button\r\n                  key={radius}\r\n                  onClick={() => setBorderRadius(radius)}\r\n                  className={cn(\r\n                    'flex-1 p-2 border transition-all',\r\n                    settings.borderRadius === radius && 'border-primary bg-primary/10'\r\n                  )}\r\n                  style={{ borderRadius: `${radius}px` }}\r\n                >\r\n                  {radius}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <Separator />\r\n\r\n          {/* Animations Toggle */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <Label htmlFor=\"animations\" className=\"text-base font-semibold cursor-pointer\">\r\n              אנימציות\r\n            </Label>\r\n            <Switch\r\n              id=\"animations\"\r\n              checked={settings.enableAnimations}\r\n              onCheckedChange={toggleAnimations}\r\n            />\r\n          </div>\r\n\r\n          <Separator />\r\n\r\n          {/* Reset Button */}\r\n          <Button \r\n            variant=\"outline\" \r\n            className=\"w-full gap-2\"\r\n            onClick={resetToDefault}\r\n          >\r\n            <RotateCcw className=\"h-4 w-4\" />\r\n            איפוס לברירת מחדל\r\n          </Button>\r\n        </div>\r\n      </SheetContent>\r\n    </Sheet>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\TorahBreadcrumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ViewportSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\VirtualizedPasukList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\search\\SearchButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\search\\SearchDialog.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":102,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":102,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3338,3341],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3338,3341],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect } from \"react\";\r\nimport { X, Search, Filter, BookOpen, MessageSquare, FileText } from \"lucide-react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { FlatPasuk, Sefer } from \"@/types/torah\";\r\nimport { SearchFilters } from \"@/hooks/useSearch\";\r\n\r\ninterface SearchDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  query: string;\r\n  onQueryChange: (query: string) => void;\r\n  filters: SearchFilters;\r\n  onFiltersChange: (filters: SearchFilters) => void;\r\n  results: FlatPasuk[];\r\n  isSearching: boolean;\r\n  onResultClick: (pasuk: FlatPasuk) => void;\r\n  seferData: Sefer[];\r\n}\r\n\r\nexport const SearchDialog = ({\r\n  isOpen,\r\n  onClose,\r\n  query,\r\n  onQueryChange,\r\n  filters,\r\n  onFiltersChange,\r\n  results,\r\n  isSearching,\r\n  onResultClick,\r\n  seferData,\r\n}: SearchDialogProps) => {\r\n  const highlightText = (text: string, searchQuery: string) => {\r\n    if (!searchQuery.trim()) return text;\r\n    \r\n    const parts = text.split(new RegExp(`(${searchQuery})`, 'gi'));\r\n    return parts.map((part, i) => \r\n      part.toLowerCase() === searchQuery.toLowerCase() \r\n        ? `<mark class=\"bg-primary/20 text-primary font-semibold rounded px-0.5\">${part}</mark>`\r\n        : part\r\n    ).join('');\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-3xl h-[80vh] p-0 gap-0\">\r\n        <DialogHeader className=\"px-6 pt-6 pb-4 space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <DialogTitle className=\"text-2xl font-bold\">חיפוש בתורה</DialogTitle>\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"icon\"\r\n              onClick={onClose}\r\n              className=\"h-8 w-8\"\r\n            >\r\n              <X className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n          \r\n          <div className=\"relative\">\r\n            <Search className=\"absolute right-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\r\n            <Input\r\n              placeholder=\"חפש פסוקים, פרושים ושאלות...\"\r\n              value={query}\r\n              onChange={(e) => onQueryChange(e.target.value)}\r\n              className=\"pr-10 pl-4 h-12 text-lg\"\r\n              autoFocus\r\n            />\r\n            {query && (\r\n              <button\r\n                onClick={() => onQueryChange(\"\")}\r\n                className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground transition-colors\"\r\n              >\r\n                <X className=\"h-4 w-4\" />\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Filters */}\r\n          <div className=\"flex flex-wrap gap-2 items-center\">\r\n            <Filter className=\"h-4 w-4 text-muted-foreground\" />\r\n            \r\n            <Select\r\n              value={filters.searchType}\r\n              onValueChange={(value: any) => \r\n                onFiltersChange({ ...filters, searchType: value })\r\n              }\r\n            >\r\n              <SelectTrigger className=\"w-[140px] h-9\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Search className=\"h-4 w-4\" />\r\n                    <span>הכל</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"pasuk\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <BookOpen className=\"h-4 w-4\" />\r\n                    <span>פסוקים</span>\r\n                  </div>\r\n                </SelectItem>\r\n                <SelectItem value=\"perush\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <FileText className=\"h-4 w-4\" />\r\n                    <span>פרושים</span>\r\n                  </div>\r\n                </SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Select\r\n              value={filters.sefer?.toString() || \"all\"}\r\n              onValueChange={(value) => \r\n                onFiltersChange({ \r\n                  ...filters, \r\n                  sefer: value === \"all\" ? undefined : parseInt(value),\r\n                  parsha: undefined,\r\n                  perek: undefined \r\n                })\r\n              }\r\n            >\r\n              <SelectTrigger className=\"w-[140px] h-9\">\r\n                <SelectValue placeholder=\"חומש\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">כל החומשים</SelectItem>\r\n                {seferData.map((sefer) => (\r\n                  <SelectItem key={sefer.sefer_id} value={sefer.sefer_id.toString()}>\r\n                    {sefer.sefer_name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            {(filters.sefer || filters.searchType !== \"all\") && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={() => onFiltersChange({ searchType: \"all\" })}\r\n                className=\"h-9\"\r\n              >\r\n                נקה סינון\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </DialogHeader>\r\n\r\n        <Separator />\r\n\r\n        <ScrollArea className=\"flex-1 px-6\">\r\n          <div className=\"py-4 space-y-3\">\r\n            {isSearching ? (\r\n              <div className=\"flex flex-col items-center justify-center py-12 text-muted-foreground\">\r\n                <Search className=\"h-12 w-12 animate-pulse mb-4\" />\r\n                <p>מחפש...</p>\r\n              </div>\r\n            ) : !query.trim() ? (\r\n              <div className=\"flex flex-col items-center justify-center py-12 text-muted-foreground\">\r\n                <Search className=\"h-12 w-12 mb-4 opacity-20\" />\r\n                <p className=\"text-lg\">התחל להקליד כדי לחפש</p>\r\n                <p className=\"text-sm mt-2\">חפש פסוקים, פרושים או שאלות בכל התורה</p>\r\n              </div>\r\n            ) : results.length === 0 ? (\r\n              <div className=\"flex flex-col items-center justify-center py-12 text-muted-foreground\">\r\n                <MessageSquare className=\"h-12 w-12 mb-4 opacity-20\" />\r\n                <p className=\"text-lg\">לא נמצאו תוצאות</p>\r\n                <p className=\"text-sm mt-2\">נסה חיפוש אחר או שנה את הפילטרים</p>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <Badge variant=\"secondary\" className=\"text-sm\">\r\n                    {results.length} תוצאות\r\n                  </Badge>\r\n                </div>\r\n                \r\n                {results.map((pasuk) => (\r\n                  <button\r\n                    key={`${pasuk.sefer}-${pasuk.perek}-${pasuk.pasuk_num}`}\r\n                    onClick={() => {\r\n                      onResultClick(pasuk);\r\n                      onClose();\r\n                    }}\r\n                    className={cn(\r\n                      \"w-full text-right p-4 rounded-lg border\",\r\n                      \"hover:bg-accent transition-colors\",\r\n                      \"focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                    )}\r\n                  >\r\n                    <div className=\"flex items-start justify-between gap-3 mb-2\">\r\n                      <Badge variant=\"outline\" className=\"shrink-0\">\r\n                        {pasuk.sefer_name} {pasuk.perek}:{pasuk.pasuk_num}\r\n                      </Badge>\r\n                    </div>\r\n                    \r\n                    <p \r\n                      className=\"text-base leading-relaxed mb-3\"\r\n                      dangerouslySetInnerHTML={{ \r\n                        __html: highlightText(pasuk.text, query) \r\n                      }}\r\n                    />\r\n                    \r\n                    {pasuk.content?.flatMap(c => \r\n                      c.questions?.flatMap(q => \r\n                        q.perushim?.map((perush, idx) => (\r\n                          <div key={`${c.id}-${q.id}-${idx}`} className=\"mt-3 pr-4 border-r-2 border-primary/20\">\r\n                            <p className=\"text-sm font-semibold text-primary mb-1\">\r\n                              {perush.mefaresh}\r\n                            </p>\r\n                            <p \r\n                              className=\"text-sm text-muted-foreground leading-relaxed\"\r\n                              dangerouslySetInnerHTML={{ \r\n                                __html: highlightText(perush.text, query) \r\n                              }}\r\n                            />\r\n                          </div>\r\n                        ))\r\n                      )\r\n                    )}\r\n                  </button>\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n        </ScrollArea>\r\n\r\n        {query && (\r\n          <div className=\"px-6 py-3 border-t bg-muted/30\">\r\n            <p className=\"text-sm text-muted-foreground text-center\">\r\n              <kbd className=\"px-2 py-1 text-xs font-semibold bg-background border rounded\">Esc</kbd>\r\n              {\" \"}לסגירה\r\n            </p>\r\n          </div>\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\accordion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\alert-dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\aspect-ratio.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\avatar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\badge.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":29,"column":17,"nodeType":"Identifier","messageId":"namedExport","endLine":29,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive: \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />;\r\n}\r\n\r\nexport { Badge, badgeVariants };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\breadcrumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\button.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":47,"column":18,"nodeType":"Identifier","messageId":"namedExport","endLine":47,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />;\r\n  },\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\calendar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\carousel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\chart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\checkbox.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\collapsible.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\command.tsx","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":24,"column":11,"nodeType":"Identifier","messageId":"noEmptyInterfaceWithSuper","endLine":24,"endColumn":29,"suggestions":[{"messageId":"replaceEmptyInterfaceWithSuper","fix":{"range":[733,784],"text":"type CommandDialogProps = DialogProps"},"desc":"Replace empty interface with a type alias."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\";\r\nimport { type DialogProps } from \"@radix-ui/react-dialog\";\r\nimport { Command as CommandPrimitive } from \"cmdk\";\r\nimport { Search } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\";\r\n\r\nconst Command = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCommand.displayName = CommandPrimitive.displayName;\r\n\r\ninterface CommandDialogProps extends DialogProps {}\r\n\r\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\r\n  return (\r\n    <Dialog {...props}>\r\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\r\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\r\n          {children}\r\n        </Command>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst CommandInput = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Input>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\r\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\r\n    <CommandPrimitive.Input\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  </div>\r\n));\r\n\r\nCommandInput.displayName = CommandPrimitive.Input.displayName;\r\n\r\nconst CommandList = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.List\r\n    ref={ref}\r\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\r\n    {...props}\r\n  />\r\n));\r\n\r\nCommandList.displayName = CommandPrimitive.List.displayName;\r\n\r\nconst CommandEmpty = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Empty>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\r\n>((props, ref) => <CommandPrimitive.Empty ref={ref} className=\"py-6 text-center text-sm\" {...props} />);\r\n\r\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName;\r\n\r\nconst CommandGroup = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Group>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Group\r\n    ref={ref}\r\n    className={cn(\r\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\n\r\nCommandGroup.displayName = CommandPrimitive.Group.displayName;\r\n\r\nconst CommandSeparator = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Separator ref={ref} className={cn(\"-mx-1 h-px bg-border\", className)} {...props} />\r\n));\r\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName;\r\n\r\nconst CommandItem = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\n\r\nCommandItem.displayName = CommandPrimitive.Item.displayName;\r\n\r\nconst CommandShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return <span className={cn(\"ml-auto text-xs tracking-widest text-muted-foreground\", className)} {...props} />;\r\n};\r\nCommandShortcut.displayName = \"CommandShortcut\";\r\n\r\nexport {\r\n  Command,\r\n  CommandDialog,\r\n  CommandInput,\r\n  CommandList,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandItem,\r\n  CommandShortcut,\r\n  CommandSeparator,\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\context-menu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\drawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\dropdown-menu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\form.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":129,"column":10,"nodeType":"Identifier","messageId":"namedExport","endLine":129,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\";\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { Controller, ControllerProps, FieldPath, FieldValues, FormProvider, useFormContext } from \"react-hook-form\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Label } from \"@/components/ui/label\";\r\n\r\nconst Form = FormProvider;\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n> = {\r\n  name: TName;\r\n};\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue);\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  );\r\n};\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext);\r\n  const itemContext = React.useContext(FormItemContext);\r\n  const { getFieldState, formState } = useFormContext();\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState);\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\");\r\n  }\r\n\r\n  const { id } = itemContext;\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  };\r\n};\r\n\r\ntype FormItemContextValue = {\r\n  id: string;\r\n};\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue);\r\n\r\nconst FormItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\r\n  ({ className, ...props }, ref) => {\r\n    const id = React.useId();\r\n\r\n    return (\r\n      <FormItemContext.Provider value={{ id }}>\r\n        <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n      </FormItemContext.Provider>\r\n    );\r\n  },\r\n);\r\nFormItem.displayName = \"FormItem\";\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField();\r\n\r\n  return <Label ref={ref} className={cn(error && \"text-destructive\", className)} htmlFor={formItemId} {...props} />;\r\n});\r\nFormLabel.displayName = \"FormLabel\";\r\n\r\nconst FormControl = React.forwardRef<React.ElementRef<typeof Slot>, React.ComponentPropsWithoutRef<typeof Slot>>(\r\n  ({ ...props }, ref) => {\r\n    const { error, formItemId, formDescriptionId, formMessageId } = useFormField();\r\n\r\n    return (\r\n      <Slot\r\n        ref={ref}\r\n        id={formItemId}\r\n        aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}\r\n        aria-invalid={!!error}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nFormControl.displayName = \"FormControl\";\r\n\r\nconst FormDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\r\n  ({ className, ...props }, ref) => {\r\n    const { formDescriptionId } = useFormField();\r\n\r\n    return <p ref={ref} id={formDescriptionId} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />;\r\n  },\r\n);\r\nFormDescription.displayName = \"FormDescription\";\r\n\r\nconst FormMessage = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\r\n  ({ className, children, ...props }, ref) => {\r\n    const { error, formMessageId } = useFormField();\r\n    const body = error ? String(error?.message) : children;\r\n\r\n    if (!body) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <p ref={ref} id={formMessageId} className={cn(\"text-sm font-medium text-destructive\", className)} {...props}>\r\n        {body}\r\n      </p>\r\n    );\r\n  },\r\n);\r\nFormMessage.displayName = \"FormMessage\";\r\n\r\nexport { useFormField, Form, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\hover-card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\input-otp.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\label.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\menubar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\navigation-menu.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":111,"column":3,"nodeType":"Identifier","messageId":"namedExport","endLine":111,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\";\r\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\";\r\nimport { cva } from \"class-variance-authority\";\r\nimport { ChevronDown } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst NavigationMenu = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative z-10 flex max-w-max flex-1 items-center justify-center\", className)}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <NavigationMenuViewport />\r\n  </NavigationMenuPrimitive.Root>\r\n));\r\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName;\r\n\r\nconst NavigationMenuList = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.List\r\n    ref={ref}\r\n    className={cn(\"group flex flex-1 list-none items-center justify-center space-x-1\", className)}\r\n    {...props}\r\n  />\r\n));\r\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName;\r\n\r\nconst NavigationMenuItem = NavigationMenuPrimitive.Item;\r\n\r\nconst navigationMenuTriggerStyle = cva(\r\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\",\r\n);\r\n\r\nconst NavigationMenuTrigger = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\r\n    {...props}\r\n  >\r\n    {children}{\" \"}\r\n    <ChevronDown\r\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\r\n      aria-hidden=\"true\"\r\n    />\r\n  </NavigationMenuPrimitive.Trigger>\r\n));\r\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName;\r\n\r\nconst NavigationMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName;\r\n\r\nconst NavigationMenuLink = NavigationMenuPrimitive.Link;\r\n\r\nconst NavigationMenuViewport = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\r\n    <NavigationMenuPrimitive.Viewport\r\n      className={cn(\r\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\r\n        className,\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  </div>\r\n));\r\nNavigationMenuViewport.displayName = NavigationMenuPrimitive.Viewport.displayName;\r\n\r\nconst NavigationMenuIndicator = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\r\n>(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Indicator\r\n    ref={ref}\r\n    className={cn(\r\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\r\n  </NavigationMenuPrimitive.Indicator>\r\n));\r\nNavigationMenuIndicator.displayName = NavigationMenuPrimitive.Indicator.displayName;\r\n\r\nexport {\r\n  navigationMenuTriggerStyle,\r\n  NavigationMenu,\r\n  NavigationMenuList,\r\n  NavigationMenuItem,\r\n  NavigationMenuContent,\r\n  NavigationMenuTrigger,\r\n  NavigationMenuLink,\r\n  NavigationMenuIndicator,\r\n  NavigationMenuViewport,\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\pagination.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\popover.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\progress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\radio-group.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\resizable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\scroll-area.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\separator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\sheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\sidebar.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":636,"column":3,"nodeType":"Identifier","messageId":"namedExport","endLine":636,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { VariantProps, cva } from \"class-variance-authority\";\r\nimport { PanelLeft } from \"lucide-react\";\r\n\r\nimport { useIsMobile } from \"@/hooks/use-mobile\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\n\r\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\";\r\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\r\nconst SIDEBAR_WIDTH = \"16rem\";\r\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\";\r\nconst SIDEBAR_WIDTH_ICON = \"3rem\";\r\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\";\r\n\r\ntype SidebarContext = {\r\n  state: \"expanded\" | \"collapsed\";\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n  openMobile: boolean;\r\n  setOpenMobile: (open: boolean) => void;\r\n  isMobile: boolean;\r\n  toggleSidebar: () => void;\r\n};\r\n\r\nconst SidebarContext = React.createContext<SidebarContext | null>(null);\r\n\r\nfunction useSidebar() {\r\n  const context = React.useContext(SidebarContext);\r\n  if (!context) {\r\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\");\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nconst SidebarProvider = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    defaultOpen?: boolean;\r\n    open?: boolean;\r\n    onOpenChange?: (open: boolean) => void;\r\n  }\r\n>(({ defaultOpen = true, open: openProp, onOpenChange: setOpenProp, className, style, children, ...props }, ref) => {\r\n  const isMobile = useIsMobile();\r\n  const [openMobile, setOpenMobile] = React.useState(false);\r\n\r\n  // This is the internal state of the sidebar.\r\n  // We use openProp and setOpenProp for control from outside the component.\r\n  const [_open, _setOpen] = React.useState(defaultOpen);\r\n  const open = openProp ?? _open;\r\n  const setOpen = React.useCallback(\r\n    (value: boolean | ((value: boolean) => boolean)) => {\r\n      const openState = typeof value === \"function\" ? value(open) : value;\r\n      if (setOpenProp) {\r\n        setOpenProp(openState);\r\n      } else {\r\n        _setOpen(openState);\r\n      }\r\n\r\n      // This sets the cookie to keep the sidebar state.\r\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\r\n    },\r\n    [setOpenProp, open],\r\n  );\r\n\r\n  // Helper to toggle the sidebar.\r\n  const toggleSidebar = React.useCallback(() => {\r\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open);\r\n  }, [isMobile, setOpen, setOpenMobile]);\r\n\r\n  // Adds a keyboard shortcut to toggle the sidebar.\r\n  React.useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {\r\n        event.preventDefault();\r\n        toggleSidebar();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [toggleSidebar]);\r\n\r\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\r\n  // This makes it easier to style the sidebar with Tailwind classes.\r\n  const state = open ? \"expanded\" : \"collapsed\";\r\n\r\n  const contextValue = React.useMemo<SidebarContext>(\r\n    () => ({\r\n      state,\r\n      open,\r\n      setOpen,\r\n      isMobile,\r\n      openMobile,\r\n      setOpenMobile,\r\n      toggleSidebar,\r\n    }),\r\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar],\r\n  );\r\n\r\n  return (\r\n    <SidebarContext.Provider value={contextValue}>\r\n      <TooltipProvider delayDuration={0}>\r\n        <div\r\n          style={\r\n            {\r\n              \"--sidebar-width\": SIDEBAR_WIDTH,\r\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\r\n              ...style,\r\n            } as React.CSSProperties\r\n          }\r\n          className={cn(\"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\", className)}\r\n          ref={ref}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </div>\r\n      </TooltipProvider>\r\n    </SidebarContext.Provider>\r\n  );\r\n});\r\nSidebarProvider.displayName = \"SidebarProvider\";\r\n\r\nconst Sidebar = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    side?: \"left\" | \"right\";\r\n    variant?: \"sidebar\" | \"floating\" | \"inset\";\r\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\";\r\n  }\r\n>(({ side = \"left\", variant = \"sidebar\", collapsible = \"offcanvas\", className, children, ...props }, ref) => {\r\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar();\r\n\r\n  if (collapsible === \"none\") {\r\n    return (\r\n      <div\r\n        className={cn(\"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\", className)}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\r\n        <SheetContent\r\n          data-sidebar=\"sidebar\"\r\n          data-mobile=\"true\"\r\n          className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\r\n          style={\r\n            {\r\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\r\n            } as React.CSSProperties\r\n          }\r\n          side={side}\r\n        >\r\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\r\n        </SheetContent>\r\n      </Sheet>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"group peer hidden text-sidebar-foreground md:block\"\r\n      data-state={state}\r\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\r\n      data-variant={variant}\r\n      data-side={side}\r\n    >\r\n      {/* This is what handles the sidebar gap on desktop */}\r\n      <div\r\n        className={cn(\r\n          \"relative h-svh w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\r\n          \"group-data-[collapsible=offcanvas]:w-0\",\r\n          \"group-data-[side=right]:rotate-180\",\r\n          variant === \"floating\" || variant === \"inset\"\r\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\r\n            : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\",\r\n        )}\r\n      />\r\n      <div\r\n        className={cn(\r\n          \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\r\n          side === \"left\"\r\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\r\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\r\n          // Adjust the padding for floating and inset variants.\r\n          variant === \"floating\" || variant === \"inset\"\r\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\r\n            : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\r\n          className,\r\n        )}\r\n        {...props}\r\n      >\r\n        <div\r\n          data-sidebar=\"sidebar\"\r\n          className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\r\n        >\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nSidebar.displayName = \"Sidebar\";\r\n\r\nconst SidebarTrigger = React.forwardRef<React.ElementRef<typeof Button>, React.ComponentProps<typeof Button>>(\r\n  ({ className, onClick, ...props }, ref) => {\r\n    const { toggleSidebar } = useSidebar();\r\n\r\n    return (\r\n      <Button\r\n        ref={ref}\r\n        data-sidebar=\"trigger\"\r\n        variant=\"ghost\"\r\n        size=\"icon\"\r\n        className={cn(\"h-7 w-7\", className)}\r\n        onClick={(event) => {\r\n          onClick?.(event);\r\n          toggleSidebar();\r\n        }}\r\n        {...props}\r\n      >\r\n        <PanelLeft />\r\n        <span className=\"sr-only\">Toggle Sidebar</span>\r\n      </Button>\r\n    );\r\n  },\r\n);\r\nSidebarTrigger.displayName = \"SidebarTrigger\";\r\n\r\nconst SidebarRail = React.forwardRef<HTMLButtonElement, React.ComponentProps<\"button\">>(\r\n  ({ className, ...props }, ref) => {\r\n    const { toggleSidebar } = useSidebar();\r\n\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        data-sidebar=\"rail\"\r\n        aria-label=\"Toggle Sidebar\"\r\n        tabIndex={-1}\r\n        onClick={toggleSidebar}\r\n        title=\"Toggle Sidebar\"\r\n        className={cn(\r\n          \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] group-data-[side=left]:-right-4 group-data-[side=right]:left-0 hover:after:bg-sidebar-border sm:flex\",\r\n          \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\r\n          \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\r\n          \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\r\n          \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\r\n          \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nSidebarRail.displayName = \"SidebarRail\";\r\n\r\nconst SidebarInset = React.forwardRef<HTMLDivElement, React.ComponentProps<\"main\">>(({ className, ...props }, ref) => {\r\n  return (\r\n    <main\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\r\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarInset.displayName = \"SidebarInset\";\r\n\r\nconst SidebarInput = React.forwardRef<React.ElementRef<typeof Input>, React.ComponentProps<typeof Input>>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <Input\r\n        ref={ref}\r\n        data-sidebar=\"input\"\r\n        className={cn(\r\n          \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nSidebarInput.displayName = \"SidebarInput\";\r\n\r\nconst SidebarHeader = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(({ className, ...props }, ref) => {\r\n  return <div ref={ref} data-sidebar=\"header\" className={cn(\"flex flex-col gap-2 p-2\", className)} {...props} />;\r\n});\r\nSidebarHeader.displayName = \"SidebarHeader\";\r\n\r\nconst SidebarFooter = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(({ className, ...props }, ref) => {\r\n  return <div ref={ref} data-sidebar=\"footer\" className={cn(\"flex flex-col gap-2 p-2\", className)} {...props} />;\r\n});\r\nSidebarFooter.displayName = \"SidebarFooter\";\r\n\r\nconst SidebarSeparator = React.forwardRef<React.ElementRef<typeof Separator>, React.ComponentProps<typeof Separator>>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <Separator\r\n        ref={ref}\r\n        data-sidebar=\"separator\"\r\n        className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nSidebarSeparator.displayName = \"SidebarSeparator\";\r\n\r\nconst SidebarContent = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"content\"\r\n      className={cn(\r\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarContent.displayName = \"SidebarContent\";\r\n\r\nconst SidebarGroup = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"group\"\r\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarGroup.displayName = \"SidebarGroup\";\r\n\r\nconst SidebarGroupLabel = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\"> & { asChild?: boolean }>(\r\n  ({ className, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"div\";\r\n\r\n    return (\r\n      <Comp\r\n        ref={ref}\r\n        data-sidebar=\"group-label\"\r\n        className={cn(\r\n          \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n          \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\";\r\n\r\nconst SidebarGroupAction = React.forwardRef<HTMLButtonElement, React.ComponentProps<\"button\"> & { asChild?: boolean }>(\r\n  ({ className, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n\r\n    return (\r\n      <Comp\r\n        ref={ref}\r\n        data-sidebar=\"group-action\"\r\n        className={cn(\r\n          \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n          // Increases the hit area of the button on mobile.\r\n          \"after:absolute after:-inset-2 after:md:hidden\",\r\n          \"group-data-[collapsible=icon]:hidden\",\r\n          className,\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nSidebarGroupAction.displayName = \"SidebarGroupAction\";\r\n\r\nconst SidebarGroupContent = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(\r\n  ({ className, ...props }, ref) => (\r\n    <div ref={ref} data-sidebar=\"group-content\" className={cn(\"w-full text-sm\", className)} {...props} />\r\n  ),\r\n);\r\nSidebarGroupContent.displayName = \"SidebarGroupContent\";\r\n\r\nconst SidebarMenu = React.forwardRef<HTMLUListElement, React.ComponentProps<\"ul\">>(({ className, ...props }, ref) => (\r\n  <ul ref={ref} data-sidebar=\"menu\" className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)} {...props} />\r\n));\r\nSidebarMenu.displayName = \"SidebarMenu\";\r\n\r\nconst SidebarMenuItem = React.forwardRef<HTMLLIElement, React.ComponentProps<\"li\">>(({ className, ...props }, ref) => (\r\n  <li ref={ref} data-sidebar=\"menu-item\" className={cn(\"group/menu-item relative\", className)} {...props} />\r\n));\r\nSidebarMenuItem.displayName = \"SidebarMenuItem\";\r\n\r\nconst sidebarMenuButtonVariants = cva(\r\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\r\n        outline:\r\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\r\n      },\r\n      size: {\r\n        default: \"h-8 text-sm\",\r\n        sm: \"h-7 text-xs\",\r\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nconst SidebarMenuButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ComponentProps<\"button\"> & {\r\n    asChild?: boolean;\r\n    isActive?: boolean;\r\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>;\r\n  } & VariantProps<typeof sidebarMenuButtonVariants>\r\n>(({ asChild = false, isActive = false, variant = \"default\", size = \"default\", tooltip, className, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"button\";\r\n  const { isMobile, state } = useSidebar();\r\n\r\n  const button = (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"menu-button\"\r\n      data-size={size}\r\n      data-active={isActive}\r\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\r\n      {...props}\r\n    />\r\n  );\r\n\r\n  if (!tooltip) {\r\n    return button;\r\n  }\r\n\r\n  if (typeof tooltip === \"string\") {\r\n    tooltip = {\r\n      children: tooltip,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Tooltip>\r\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\r\n      <TooltipContent side=\"right\" align=\"center\" hidden={state !== \"collapsed\" || isMobile} {...tooltip} />\r\n    </Tooltip>\r\n  );\r\n});\r\nSidebarMenuButton.displayName = \"SidebarMenuButton\";\r\n\r\nconst SidebarMenuAction = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ComponentProps<\"button\"> & {\r\n    asChild?: boolean;\r\n    showOnHover?: boolean;\r\n  }\r\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"button\";\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"menu-action\"\r\n      className={cn(\r\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform peer-hover/menu-button:text-sidebar-accent-foreground hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n        // Increases the hit area of the button on mobile.\r\n        \"after:absolute after:-inset-2 after:md:hidden\",\r\n        \"peer-data-[size=sm]/menu-button:top-1\",\r\n        \"peer-data-[size=default]/menu-button:top-1.5\",\r\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\r\n        \"group-data-[collapsible=icon]:hidden\",\r\n        showOnHover &&\r\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarMenuAction.displayName = \"SidebarMenuAction\";\r\n\r\nconst SidebarMenuBadge = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(\r\n  ({ className, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"menu-badge\"\r\n      className={cn(\r\n        \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\r\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\r\n        \"peer-data-[size=sm]/menu-button:top-1\",\r\n        \"peer-data-[size=default]/menu-button:top-1.5\",\r\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\r\n        \"group-data-[collapsible=icon]:hidden\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  ),\r\n);\r\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\";\r\n\r\nconst SidebarMenuSkeleton = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    showIcon?: boolean;\r\n  }\r\n>(({ className, showIcon = false, ...props }, ref) => {\r\n  // Random width between 50 to 90%.\r\n  const width = React.useMemo(() => {\r\n    return `${Math.floor(Math.random() * 40) + 50}%`;\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"menu-skeleton\"\r\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\r\n      {...props}\r\n    >\r\n      {showIcon && <Skeleton className=\"size-4 rounded-md\" data-sidebar=\"menu-skeleton-icon\" />}\r\n      <Skeleton\r\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\r\n        data-sidebar=\"menu-skeleton-text\"\r\n        style={\r\n          {\r\n            \"--skeleton-width\": width,\r\n          } as React.CSSProperties\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n});\r\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\";\r\n\r\nconst SidebarMenuSub = React.forwardRef<HTMLUListElement, React.ComponentProps<\"ul\">>(\r\n  ({ className, ...props }, ref) => (\r\n    <ul\r\n      ref={ref}\r\n      data-sidebar=\"menu-sub\"\r\n      className={cn(\r\n        \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\r\n        \"group-data-[collapsible=icon]:hidden\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  ),\r\n);\r\nSidebarMenuSub.displayName = \"SidebarMenuSub\";\r\n\r\nconst SidebarMenuSubItem = React.forwardRef<HTMLLIElement, React.ComponentProps<\"li\">>(({ ...props }, ref) => (\r\n  <li ref={ref} {...props} />\r\n));\r\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\";\r\n\r\nconst SidebarMenuSubButton = React.forwardRef<\r\n  HTMLAnchorElement,\r\n  React.ComponentProps<\"a\"> & {\r\n    asChild?: boolean;\r\n    size?: \"sm\" | \"md\";\r\n    isActive?: boolean;\r\n  }\r\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"a\";\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"menu-sub-button\"\r\n      data-size={size}\r\n      data-active={isActive}\r\n      className={cn(\r\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring aria-disabled:pointer-events-none aria-disabled:opacity-50 hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\r\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\r\n        size === \"sm\" && \"text-xs\",\r\n        size === \"md\" && \"text-sm\",\r\n        \"group-data-[collapsible=icon]:hidden\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\";\r\n\r\nexport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarFooter,\r\n  SidebarGroup,\r\n  SidebarGroupAction,\r\n  SidebarGroupContent,\r\n  SidebarGroupLabel,\r\n  SidebarHeader,\r\n  SidebarInput,\r\n  SidebarInset,\r\n  SidebarMenu,\r\n  SidebarMenuAction,\r\n  SidebarMenuBadge,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  SidebarMenuSkeleton,\r\n  SidebarMenuSub,\r\n  SidebarMenuSubButton,\r\n  SidebarMenuSubItem,\r\n  SidebarProvider,\r\n  SidebarRail,\r\n  SidebarSeparator,\r\n  SidebarTrigger,\r\n  useSidebar,\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\skeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\slider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\sonner.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":27,"column":19,"nodeType":"Identifier","messageId":"namedExport","endLine":27,"endColumn":24}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useTheme } from \"next-themes\";\r\nimport { Toaster as Sonner, toast } from \"sonner\";\r\n\r\ntype ToasterProps = React.ComponentProps<typeof Sonner>;\r\n\r\nconst Toaster = ({ ...props }: ToasterProps) => {\r\n  const { theme = \"system\" } = useTheme();\r\n\r\n  return (\r\n    <Sonner\r\n      theme={theme as ToasterProps[\"theme\"]}\r\n      className=\"toaster group\"\r\n      toastOptions={{\r\n        classNames: {\r\n          toast:\r\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\r\n          description: \"group-[.toast]:text-muted-foreground\",\r\n          actionButton: \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\r\n          cancelButton: \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Toaster, toast };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\switch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\table.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\tabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\textarea.tsx","messages":[{"ruleId":"@typescript-eslint/no-empty-object-type","severity":2,"message":"An interface declaring no members is equivalent to its supertype.","line":5,"column":18,"nodeType":"Identifier","messageId":"noEmptyInterfaceWithSuper","endLine":5,"endColumn":31,"suggestions":[{"messageId":"replaceEmptyInterfaceWithSuper","fix":{"range":[79,163],"text":"type TextareaProps = React.TextareaHTMLAttributes<HTMLTextAreaElement>"},"desc":"Replace empty interface with a type alias."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({ className, ...props }, ref) => {\r\n  return (\r\n    <textarea\r\n      className={cn(\r\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className,\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nTextarea.displayName = \"Textarea\";\r\n\r\nexport { Textarea };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\toaster.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\toggle-group.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\toggle.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":37,"column":18,"nodeType":"Identifier","messageId":"namedExport","endLine":37,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\";\r\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst toggleVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-transparent\",\r\n        outline: \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-3\",\r\n        sm: \"h-9 px-2.5\",\r\n        lg: \"h-11 px-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nconst Toggle = React.forwardRef<\r\n  React.ElementRef<typeof TogglePrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> & VariantProps<typeof toggleVariants>\r\n>(({ className, variant, size, ...props }, ref) => (\r\n  <TogglePrimitive.Root ref={ref} className={cn(toggleVariants({ variant, size, className }))} {...props} />\r\n));\r\n\r\nToggle.displayName = TogglePrimitive.Root.displayName;\r\n\r\nexport { Toggle, toggleVariants };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\tooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\components\\ui\\use-toast.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\contexts\\BookmarksContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":166,"column":17,"nodeType":"Identifier","messageId":"namedExport","endLine":166,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { Bookmark, BookmarkCollection, BookmarkColor } from '@/types/bookmark';\r\nimport {\r\n  getAllBookmarks,\r\n  addBookmark as addBookmarkUtil,\r\n  updateBookmark as updateBookmarkUtil,\r\n  deleteBookmark as deleteBookmarkUtil,\r\n  isBookmarked as isBookmarkedUtil,\r\n  getAllCollections,\r\n  addCollection as addCollectionUtil,\r\n  updateCollection as updateCollectionUtil,\r\n  deleteCollection as deleteCollectionUtil,\r\n  addBookmarkToCollection as addToCollectionUtil,\r\n  removeBookmarkFromCollection as removeFromCollectionUtil,\r\n  getAllTags,\r\n} from '@/utils/bookmarks';\r\n\r\ninterface BookmarksContextType {\r\n  bookmarks: Bookmark[];\r\n  collections: BookmarkCollection[];\r\n  tags: string[];\r\n  addBookmark: (bookmark: Omit<Bookmark, 'id' | 'createdAt'>) => Bookmark;\r\n  updateBookmark: (id: string, updates: Partial<Bookmark>) => boolean;\r\n  deleteBookmark: (id: string) => boolean;\r\n  isBookmarked: (sefer: number, perek: number, pasuk: number) => Bookmark | null;\r\n  toggleBookmark: (\r\n    sefer: number,\r\n    seferName: string,\r\n    perek: number,\r\n    pasuk: number,\r\n    parshaId?: number | null,\r\n    parshaName?: string | null,\r\n    pasukText?: string\r\n  ) => Bookmark | null;\r\n  addCollection: (collection: Omit<BookmarkCollection, 'id' | 'createdAt' | 'updatedAt'>) => BookmarkCollection;\r\n  updateCollection: (id: string, updates: Partial<BookmarkCollection>) => boolean;\r\n  deleteCollection: (id: string) => boolean;\r\n  addBookmarkToCollection: (collectionId: string, bookmarkId: string) => boolean;\r\n  removeBookmarkFromCollection: (collectionId: string, bookmarkId: string) => boolean;\r\n  refreshBookmarks: () => void;\r\n}\r\n\r\nconst BookmarksContext = createContext<BookmarksContextType | undefined>(undefined);\r\n\r\nexport function BookmarksProvider({ children }: { children: ReactNode }) {\r\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\r\n  const [collections, setCollections] = useState<BookmarkCollection[]>([]);\r\n  const [tags, setTags] = useState<string[]>([]);\r\n\r\n  // Load bookmarks on mount\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, []);\r\n\r\n  const refreshData = () => {\r\n    setBookmarks(getAllBookmarks());\r\n    setCollections(getAllCollections());\r\n    setTags(getAllTags());\r\n  };\r\n\r\n  const addBookmark = (bookmark: Omit<Bookmark, 'id' | 'createdAt'>) => {\r\n    const newBookmark = addBookmarkUtil(bookmark);\r\n    refreshData();\r\n    return newBookmark;\r\n  };\r\n\r\n  const updateBookmark = (id: string, updates: Partial<Bookmark>) => {\r\n    const success = updateBookmarkUtil(id, updates);\r\n    if (success) refreshData();\r\n    return success;\r\n  };\r\n\r\n  const deleteBookmark = (id: string) => {\r\n    const success = deleteBookmarkUtil(id);\r\n    if (success) refreshData();\r\n    return success;\r\n  };\r\n\r\n  const isBookmarked = (sefer: number, perek: number, pasuk: number) => {\r\n    return isBookmarkedUtil(sefer, perek, pasuk);\r\n  };\r\n\r\n  const toggleBookmark = (\r\n    sefer: number,\r\n    seferName: string,\r\n    perek: number,\r\n    pasuk: number,\r\n    parshaId: number | null = null,\r\n    parshaName: string | null = null,\r\n    pasukText?: string\r\n  ) => {\r\n    const existing = isBookmarked(sefer, perek, pasuk);\r\n    \r\n    if (existing) {\r\n      deleteBookmark(existing.id);\r\n      return null;\r\n    } else {\r\n      return addBookmark({\r\n        sefer,\r\n        seferName,\r\n        parsha: parshaId,\r\n        parshaName,\r\n        perek,\r\n        pasuk,\r\n        pasukText,\r\n        color: 'default',\r\n        tags: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  const addCollection = (collection: Omit<BookmarkCollection, 'id' | 'createdAt' | 'updatedAt'>) => {\r\n    const newCollection = addCollectionUtil(collection);\r\n    refreshData();\r\n    return newCollection;\r\n  };\r\n\r\n  const updateCollection = (id: string, updates: Partial<BookmarkCollection>) => {\r\n    const success = updateCollectionUtil(id, updates);\r\n    if (success) refreshData();\r\n    return success;\r\n  };\r\n\r\n  const deleteCollection = (id: string) => {\r\n    const success = deleteCollectionUtil(id);\r\n    if (success) refreshData();\r\n    return success;\r\n  };\r\n\r\n  const addBookmarkToCollection = (collectionId: string, bookmarkId: string) => {\r\n    const success = addToCollectionUtil(collectionId, bookmarkId);\r\n    if (success) refreshData();\r\n    return success;\r\n  };\r\n\r\n  const removeBookmarkFromCollection = (collectionId: string, bookmarkId: string) => {\r\n    const success = removeFromCollectionUtil(collectionId, bookmarkId);\r\n    if (success) refreshData();\r\n    return success;\r\n  };\r\n\r\n  const value: BookmarksContextType = {\r\n    bookmarks,\r\n    collections,\r\n    tags,\r\n    addBookmark,\r\n    updateBookmark,\r\n    deleteBookmark,\r\n    isBookmarked,\r\n    toggleBookmark,\r\n    addCollection,\r\n    updateCollection,\r\n    deleteCollection,\r\n    addBookmarkToCollection,\r\n    removeBookmarkFromCollection,\r\n    refreshBookmarks: refreshData,\r\n  };\r\n\r\n  return (\r\n    <BookmarksContext.Provider value={value}>\r\n      {children}\r\n    </BookmarksContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useBookmarks() {\r\n  const context = useContext(BookmarksContext);\r\n  if (context === undefined) {\r\n    throw new Error('useBookmarks must be used within BookmarksProvider');\r\n  }\r\n  return context;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\contexts\\FontSettingsContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":49,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":49,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\n\r\nexport interface FontSettings {\r\n  pasukFont: string;\r\n  pasukSize: number;\r\n  questionFont: string;\r\n  questionSize: number;\r\n  answerFont: string;\r\n  answerSize: number;\r\n}\r\n\r\ninterface FontSettingsContextType {\r\n  fontSettings: FontSettings;\r\n  updateFontSettings: (settings: Partial<FontSettings>) => void;\r\n}\r\n\r\nconst defaultSettings: FontSettings = {\r\n  pasukFont: \"David\",\r\n  pasukSize: 18,\r\n  questionFont: \"Arial\",\r\n  questionSize: 16,\r\n  answerFont: \"Arial\",\r\n  answerSize: 14,\r\n};\r\n\r\nconst FontSettingsContext = createContext<FontSettingsContextType | undefined>(undefined);\r\n\r\nexport const FontSettingsProvider = ({ children }: { children: ReactNode }) => {\r\n  const [fontSettings, setFontSettings] = useState<FontSettings>(() => {\r\n    const saved = localStorage.getItem(\"torah-font-settings\");\r\n    return saved ? JSON.parse(saved) : defaultSettings;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"torah-font-settings\", JSON.stringify(fontSettings));\r\n  }, [fontSettings]);\r\n\r\n  const updateFontSettings = (settings: Partial<FontSettings>) => {\r\n    setFontSettings((prev) => ({ ...prev, ...settings }));\r\n  };\r\n\r\n  return (\r\n    <FontSettingsContext.Provider value={{ fontSettings, updateFontSettings }}>\r\n      {children}\r\n    </FontSettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFontSettings = () => {\r\n  const context = useContext(FontSettingsContext);\r\n  if (!context) {\r\n    throw new Error(\"useFontSettings must be used within FontSettingsProvider\");\r\n  }\r\n  return context;\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\contexts\\HighlightsContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":71,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":71,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createContext, useContext, useState, useEffect, ReactNode, useRef } from \"react\";\r\n\r\nexport interface Highlight {\r\n  pasukId: string;\r\n  text: string;\r\n  color: string;\r\n  startIndex: number;\r\n  endIndex: number;\r\n  id: string;\r\n}\r\n\r\ninterface HighlightsContextType {\r\n  highlights: Highlight[];\r\n  addHighlight: (highlight: Omit<Highlight, \"id\">) => void;\r\n  removeHighlight: (id: string) => void;\r\n  getHighlightsForPasuk: (pasukId: string) => Highlight[];\r\n}\r\n\r\nconst HighlightsContext = createContext<HighlightsContextType | undefined>(undefined);\r\n\r\nexport const HighlightsProvider = ({ children }: { children: ReactNode }) => {\r\n  const [highlights, setHighlights] = useState<Highlight[]>(() => {\r\n    const saved = localStorage.getItem(\"torah-highlights\");\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n\r\n  const saveTimeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  useEffect(() => {\r\n    // Debounce localStorage writes\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n    \r\n    saveTimeoutRef.current = setTimeout(() => {\r\n      localStorage.setItem(\"torah-highlights\", JSON.stringify(highlights));\r\n    }, 1000);\r\n    \r\n    return () => {\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [highlights]);\r\n\r\n  const addHighlight = (highlight: Omit<Highlight, \"id\">) => {\r\n    const newHighlight: Highlight = {\r\n      ...highlight,\r\n      id: `${Date.now()}-${Math.random()}`,\r\n    };\r\n    setHighlights((prev) => [...prev, newHighlight]);\r\n  };\r\n\r\n  const removeHighlight = (id: string) => {\r\n    setHighlights((prev) => prev.filter((h) => h.id !== id));\r\n  };\r\n\r\n  const getHighlightsForPasuk = (pasukId: string) => {\r\n    return highlights.filter((h) => h.pasukId === pasukId);\r\n  };\r\n\r\n  return (\r\n    <HighlightsContext.Provider\r\n      value={{ highlights, addHighlight, removeHighlight, getHighlightsForPasuk }}\r\n    >\r\n      {children}\r\n    </HighlightsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useHighlights = () => {\r\n  const context = useContext(HighlightsContext);\r\n  if (!context) {\r\n    throw new Error(\"useHighlights must be used within HighlightsProvider\");\r\n  }\r\n  return context;\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\contexts\\NotesContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":118,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":118,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\n\r\nexport interface Note {\r\n  id: string;\r\n  pasukId: string;\r\n  content: string;\r\n  createdAt: number;\r\n}\r\n\r\nexport interface PersonalQuestion {\r\n  id: string;\r\n  pasukId: string;\r\n  question: string;\r\n  answer?: string;\r\n  createdAt: number;\r\n}\r\n\r\ninterface NotesContextType {\r\n  notes: Note[];\r\n  questions: PersonalQuestion[];\r\n  addNote: (pasukId: string, content: string) => void;\r\n  updateNote: (id: string, content: string) => void;\r\n  deleteNote: (id: string) => void;\r\n  getNotesForPasuk: (pasukId: string) => Note[];\r\n  addQuestion: (pasukId: string, question: string) => void;\r\n  updateQuestion: (id: string, question: string, answer?: string) => void;\r\n  deleteQuestion: (id: string) => void;\r\n  getQuestionsForPasuk: (pasukId: string) => PersonalQuestion[];\r\n}\r\n\r\nconst NotesContext = createContext<NotesContextType | undefined>(undefined);\r\n\r\nexport const NotesProvider = ({ children }: { children: ReactNode }) => {\r\n  const [notes, setNotes] = useState<Note[]>(() => {\r\n    const saved = localStorage.getItem(\"torah-notes\");\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n\r\n  const [questions, setQuestions] = useState<PersonalQuestion[]>(() => {\r\n    const saved = localStorage.getItem(\"torah-questions\");\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"torah-notes\", JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"torah-questions\", JSON.stringify(questions));\r\n  }, [questions]);\r\n\r\n  const addNote = (pasukId: string, content: string) => {\r\n    const newNote: Note = {\r\n      id: `note-${Date.now()}-${Math.random()}`,\r\n      pasukId,\r\n      content,\r\n      createdAt: Date.now(),\r\n    };\r\n    setNotes((prev) => [...prev, newNote]);\r\n  };\r\n\r\n  const updateNote = (id: string, content: string) => {\r\n    setNotes((prev) => prev.map((note) => (note.id === id ? { ...note, content } : note)));\r\n  };\r\n\r\n  const deleteNote = (id: string) => {\r\n    setNotes((prev) => prev.filter((note) => note.id !== id));\r\n  };\r\n\r\n  const getNotesForPasuk = (pasukId: string) => {\r\n    return notes.filter((note) => note.pasukId === pasukId);\r\n  };\r\n\r\n  const addQuestion = (pasukId: string, question: string) => {\r\n    const newQuestion: PersonalQuestion = {\r\n      id: `q-${Date.now()}-${Math.random()}`,\r\n      pasukId,\r\n      question,\r\n      createdAt: Date.now(),\r\n    };\r\n    setQuestions((prev) => [...prev, newQuestion]);\r\n  };\r\n\r\n  const updateQuestion = (id: string, question: string, answer?: string) => {\r\n    setQuestions((prev) =>\r\n      prev.map((q) => (q.id === id ? { ...q, question, answer } : q))\r\n    );\r\n  };\r\n\r\n  const deleteQuestion = (id: string) => {\r\n    setQuestions((prev) => prev.filter((q) => q.id !== id));\r\n  };\r\n\r\n  const getQuestionsForPasuk = (pasukId: string) => {\r\n    return questions.filter((q) => q.pasukId === pasukId);\r\n  };\r\n\r\n  return (\r\n    <NotesContext.Provider\r\n      value={{\r\n        notes,\r\n        questions,\r\n        addNote,\r\n        updateNote,\r\n        deleteNote,\r\n        getNotesForPasuk,\r\n        addQuestion,\r\n        updateQuestion,\r\n        deleteQuestion,\r\n        getQuestionsForPasuk,\r\n      }}\r\n    >\r\n      {children}\r\n    </NotesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useNotes = () => {\r\n  const context = useContext(NotesContext);\r\n  if (!context) {\r\n    throw new Error(\"useNotes must be used within NotesProvider\");\r\n  }\r\n  return context;\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\contexts\\QuickSelectorSettingsContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":46,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":46,"endColumn":38}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface QuickSelectorSettings {\r\n  startMinimized: boolean;\r\n}\r\n\r\ninterface QuickSelectorSettingsContextType {\r\n  settings: QuickSelectorSettings;\r\n  updateSettings: (settings: Partial<QuickSelectorSettings>) => void;\r\n}\r\n\r\nconst QuickSelectorSettingsContext = createContext<QuickSelectorSettingsContextType | undefined>(undefined);\r\n\r\nconst STORAGE_KEY = 'quickSelectorSettings';\r\n\r\nexport const QuickSelectorSettingsProvider = ({ children }: { children: ReactNode }) => {\r\n  const [settings, setSettings] = useState<QuickSelectorSettings>(() => {\r\n    const saved = localStorage.getItem(STORAGE_KEY);\r\n    if (saved) {\r\n      try {\r\n        return JSON.parse(saved);\r\n      } catch {\r\n        // Fall through to defaults\r\n      }\r\n    }\r\n    return {\r\n      startMinimized: false,\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(settings));\r\n  }, [settings]);\r\n\r\n  const updateSettings = (newSettings: Partial<QuickSelectorSettings>) => {\r\n    setSettings(prev => ({ ...prev, ...newSettings }));\r\n  };\r\n\r\n  return (\r\n    <QuickSelectorSettingsContext.Provider value={{ settings, updateSettings }}>\r\n      {children}\r\n    </QuickSelectorSettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuickSelectorSettings = () => {\r\n  const context = useContext(QuickSelectorSettingsContext);\r\n  if (!context) {\r\n    throw new Error('useQuickSelectorSettings must be used within QuickSelectorSettingsProvider');\r\n  }\r\n  return context;\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\contexts\\ThemeContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":38,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":38,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\n\r\nexport type Theme = \"classic\" | \"royal-gold\" | \"elegant-night\" | \"ancient-scroll\";\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme;\r\n  setTheme: (theme: Theme) => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\r\n  const [theme, setThemeState] = useState<Theme>(() => {\r\n    const saved = localStorage.getItem(\"torah-theme\");\r\n    return (saved as Theme) || \"classic\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Remove all theme classes\r\n    document.documentElement.classList.remove(\"classic\", \"royal-gold\", \"elegant-night\", \"ancient-scroll\");\r\n    // Add current theme class\r\n    document.documentElement.classList.add(theme);\r\n    // Save to localStorage\r\n    localStorage.setItem(\"torah-theme\", theme);\r\n  }, [theme]);\r\n\r\n  const setTheme = (newTheme: Theme) => {\r\n    setThemeState(newTheme);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error(\"useTheme must be used within ThemeProvider\");\r\n  }\r\n  return context;\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\contexts\\ThemePresetsContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":147,"column":17,"nodeType":"Identifier","messageId":"namedExport","endLine":147,"endColumn":32}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'applyTheme'. Either include it or remove the dependency array.","line":98,"column":6,"nodeType":"ArrayExpression","endLine":98,"endColumn":16,"suggestions":[{"desc":"Update the dependencies array to be: [applyTheme, settings]","fix":{"range":[4786,4796],"text":"[applyTheme, settings]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { ThemeSettings, ThemePreset, BackgroundPattern } from '@/types/theme';\r\nimport { THEME_PRESETS, HEBREW_FONTS, BACKGROUND_PATTERNS } from '@/data/themePresets';\r\n\r\ninterface ThemePresetsContextType {\r\n  settings: ThemeSettings;\r\n  setPreset: (preset: ThemePreset) => void;\r\n  setBackgroundPattern: (pattern: BackgroundPattern) => void;\r\n  setPatternOpacity: (opacity: number) => void;\r\n  setHebrewFont: (fontId: string) => void;\r\n  toggleAnimations: () => void;\r\n  setBorderRadius: (radius: number) => void;\r\n  applyTheme: () => void;\r\n  resetToDefault: () => void;\r\n}\r\n\r\nconst ThemePresetsContext = createContext<ThemePresetsContextType | undefined>(undefined);\r\n\r\nconst DEFAULT_SETTINGS: ThemeSettings = {\r\n  preset: 'default',\r\n  backgroundPattern: 'none',\r\n  patternOpacity: 5,\r\n  hebrewFont: 'frank-ruhl',\r\n  enableAnimations: true,\r\n  borderRadius: 8,\r\n};\r\n\r\nexport function ThemePresetsProvider({ children }: { children: ReactNode }) {\r\n  const [settings, setSettings] = useState<ThemeSettings>(() => {\r\n    const saved = localStorage.getItem('theme_presets');\r\n    return saved ? JSON.parse(saved) : DEFAULT_SETTINGS;\r\n  });\r\n\r\n  // Apply theme to document\r\n  const applyTheme = () => {\r\n    const preset = THEME_PRESETS.find(p => p.id === settings.preset);\r\n    if (!preset) return;\r\n\r\n    const root = document.documentElement;\r\n\r\n    // Apply colors as CSS variables (shadcn/ui format)\r\n    root.style.setProperty('--background', preset.colors.background.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--foreground', preset.colors.foreground.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--primary', preset.colors.primary.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--primary-foreground', preset.colors.primaryForeground.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--secondary', preset.colors.secondary.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--secondary-foreground', preset.colors.secondaryForeground.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--accent', preset.colors.accent.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--accent-foreground', preset.colors.accentForeground.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--muted', preset.colors.muted.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--muted-foreground', preset.colors.mutedForeground.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--card', preset.colors.card.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--card-foreground', preset.colors.cardForeground.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--border', preset.colors.border.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--destructive', preset.colors.destructive.replace('hsl(', '').replace(')', ''));\r\n    root.style.setProperty('--destructive-foreground', preset.colors.destructiveForeground.replace('hsl(', '').replace(')', ''));\r\n\r\n    // Apply background pattern\r\n    if (settings.backgroundPattern !== 'none') {\r\n      const pattern = BACKGROUND_PATTERNS[settings.backgroundPattern];\r\n      const opacity = settings.patternOpacity / 100;\r\n      // Apply pattern as background image\r\n      document.body.style.setProperty('--bg-pattern', `url(\"data:image/svg+xml,${encodeURIComponent(pattern)}\")`);\r\n      document.body.style.setProperty('--bg-pattern-opacity', opacity.toString());\r\n    } else {\r\n      document.body.style.removeProperty('--bg-pattern');\r\n      document.body.style.removeProperty('--bg-pattern-opacity');\r\n    }\r\n\r\n    // Apply font\r\n    const font = HEBREW_FONTS.find(f => f.id === settings.hebrewFont);\r\n    if (font) {\r\n      // Load font if needed\r\n      if (font.cssUrl && !font.isLocal) {\r\n        const existingLink = document.querySelector(`link[href=\"${font.cssUrl}\"]`);\r\n        if (!existingLink) {\r\n          const link = document.createElement('link');\r\n          link.rel = 'stylesheet';\r\n          link.href = font.cssUrl;\r\n          document.head.appendChild(link);\r\n        }\r\n      }\r\n      root.style.setProperty('--font-hebrew', font.family);\r\n    }\r\n\r\n    // Apply animations\r\n    root.style.setProperty('--enable-animations', settings.enableAnimations ? '1' : '0');\r\n\r\n    // Apply border radius\r\n    root.style.setProperty('--radius', `${settings.borderRadius}px`);\r\n  };\r\n\r\n  // Save to localStorage and apply theme whenever settings change\r\n  useEffect(() => {\r\n    localStorage.setItem('theme_presets', JSON.stringify(settings));\r\n    applyTheme();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [settings]);\r\n\r\n  const setPreset = (preset: ThemePreset) => {\r\n    setSettings(prev => ({ ...prev, preset }));\r\n  };\r\n\r\n  const setBackgroundPattern = (pattern: BackgroundPattern) => {\r\n    setSettings(prev => ({ ...prev, backgroundPattern: pattern }));\r\n  };\r\n\r\n  const setPatternOpacity = (opacity: number) => {\r\n    setSettings(prev => ({ ...prev, patternOpacity: Math.max(0, Math.min(100, opacity)) }));\r\n  };\r\n\r\n  const setHebrewFont = (fontId: string) => {\r\n    setSettings(prev => ({ ...prev, hebrewFont: fontId }));\r\n  };\r\n\r\n  const toggleAnimations = () => {\r\n    setSettings(prev => ({ ...prev, enableAnimations: !prev.enableAnimations }));\r\n  };\r\n\r\n  const setBorderRadius = (radius: number) => {\r\n    setSettings(prev => ({ ...prev, borderRadius: Math.max(0, Math.min(20, radius)) }));\r\n  };\r\n\r\n  const resetToDefault = () => {\r\n    setSettings(DEFAULT_SETTINGS);\r\n  };\r\n\r\n  return (\r\n    <ThemePresetsContext.Provider\r\n      value={{\r\n        settings,\r\n        setPreset,\r\n        setBackgroundPattern,\r\n        setPatternOpacity,\r\n        setHebrewFont,\r\n        toggleAnimations,\r\n        setBorderRadius,\r\n        applyTheme,\r\n        resetToDefault,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemePresetsContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useThemePresets() {\r\n  const context = useContext(ThemePresetsContext);\r\n  if (!context) {\r\n    throw new Error('useThemePresets must be used within ThemePresetsProvider');\r\n  }\r\n  return context;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\data\\themePresets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\components\\ElementHighlight.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\components\\Inspector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\components\\InspectorButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\components\\InspectorPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\components\\PropertyEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\context\\InspectorContext.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":73,"column":51,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":73,"endColumn":54,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2514,2517],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2514,2517],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":177,"column":17,"nodeType":"Identifier","messageId":"namedExport","endLine":177,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Inspector Context\r\n * ניהול מצב מערכת ה-Inspector\r\n */\r\n\r\nimport React, { createContext, useContext, useState, useCallback, useMemo } from 'react';\r\nimport type { InspectorContextType, ElementProperties, PropertyChange } from '../types/inspector';\r\nimport { extractElementProperties } from '../utils/extractProperties';\r\nimport { applyPropertyChange, generateCSSCode, copyToClipboard } from '../utils/applyChanges';\r\nimport { toast } from 'sonner';\r\n\r\nconst InspectorContext = createContext<InspectorContextType | undefined>(undefined);\r\n\r\nexport function InspectorProvider({ children }: { children: React.ReactNode }) {\r\n  // State\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isPickerMode, setIsPickerMode] = useState(false);\r\n  const [selectedElement, setSelectedElement] = useState<HTMLElement | null>(null);\r\n  const [hoveredElement, setHoveredElement] = useState<HTMLElement | null>(null);\r\n  const [properties, setProperties] = useState<ElementProperties | null>(null);\r\n  const [changes, setChanges] = useState<PropertyChange[]>([]);\r\n  const [isPanelOpen, setIsPanelOpen] = useState(false);\r\n\r\n  // Actions\r\n  const toggleInspector = useCallback(() => {\r\n    setIsActive(prev => {\r\n      const newState = !prev;\r\n      if (!newState) {\r\n        // כיבוי - איפוס הכל\r\n        setIsPickerMode(false);\r\n        setSelectedElement(null);\r\n        setHoveredElement(null);\r\n        setProperties(null);\r\n        setIsPanelOpen(false);\r\n      }\r\n      return newState;\r\n    });\r\n  }, []);\r\n\r\n  const enablePickerMode = useCallback(() => {\r\n    setIsPickerMode(true);\r\n  }, []);\r\n\r\n  const disablePickerMode = useCallback(() => {\r\n    setIsPickerMode(false);\r\n    setHoveredElement(null);\r\n  }, []);\r\n\r\n  const selectElement = useCallback((element: HTMLElement | null) => {\r\n    setSelectedElement(element);\r\n    \r\n    if (element) {\r\n      // חילוץ תכונות\r\n      const props = extractElementProperties(element);\r\n      setProperties(props);\r\n      setIsPanelOpen(true);\r\n      setIsPickerMode(false);\r\n      \r\n      toast.success('אלמנט נבחר', {\r\n        description: `${props.selector}`,\r\n      });\r\n    } else {\r\n      setProperties(null);\r\n      setChanges([]);\r\n    }\r\n  }, []);\r\n\r\n  const updateProperty = useCallback((property: string, value: string) => {\r\n    if (!selectedElement || !properties) return;\r\n\r\n    // שמירת הערך הישן\r\n    const currentValue = window.getComputedStyle(selectedElement).getPropertyValue(property) ||\r\n                        (selectedElement.style as any)[property] || '';\r\n\r\n    // החלת השינוי\r\n    applyPropertyChange(selectedElement, property, value);\r\n\r\n    // שמירת השינוי\r\n    const change: PropertyChange = {\r\n      property,\r\n      oldValue: currentValue,\r\n      newValue: value,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    setChanges(prev => {\r\n      // בדיקה אם כבר יש שינוי לאותו property\r\n      const existingIndex = prev.findIndex(c => c.property === property);\r\n      if (existingIndex >= 0) {\r\n        // עדכון קיים\r\n        const updated = [...prev];\r\n        updated[existingIndex] = change;\r\n        return updated;\r\n      }\r\n      // הוספת חדש\r\n      return [...prev, change];\r\n    });\r\n\r\n    // עדכון התכונות\r\n    const updatedProps = extractElementProperties(selectedElement);\r\n    setProperties(updatedProps);\r\n  }, [selectedElement, properties]);\r\n\r\n  const clearChanges = useCallback(() => {\r\n    setChanges([]);\r\n    toast.info('השינויים נוקו');\r\n  }, []);\r\n\r\n  const exportCSS = useCallback((): string => {\r\n    if (!properties || changes.length === 0) {\r\n      toast.error('אין שינויים לייצוא');\r\n      return '';\r\n    }\r\n\r\n    const css = generateCSSCode(properties.selector, changes);\r\n    \r\n    copyToClipboard(css).then(success => {\r\n      if (success) {\r\n        toast.success('הקוד הועתק ללוח', {\r\n          description: `${changes.length} שינויים`,\r\n        });\r\n      } else {\r\n        toast.error('שגיאה בהעתקה');\r\n      }\r\n    });\r\n\r\n    return css;\r\n  }, [properties, changes]);\r\n\r\n  const togglePanel = useCallback(() => {\r\n    setIsPanelOpen(prev => !prev);\r\n  }, []);\r\n\r\n  // Context Value\r\n  const value = useMemo<InspectorContextType>(() => ({\r\n    isActive,\r\n    isPickerMode,\r\n    selectedElement,\r\n    hoveredElement,\r\n    properties,\r\n    changes,\r\n    isPanelOpen,\r\n    toggleInspector,\r\n    enablePickerMode,\r\n    disablePickerMode,\r\n    selectElement,\r\n    setHoveredElement,\r\n    updateProperty,\r\n    clearChanges,\r\n    exportCSS,\r\n    togglePanel,\r\n  }), [\r\n    isActive,\r\n    isPickerMode,\r\n    selectedElement,\r\n    hoveredElement,\r\n    properties,\r\n    changes,\r\n    isPanelOpen,\r\n    toggleInspector,\r\n    enablePickerMode,\r\n    disablePickerMode,\r\n    selectElement,\r\n    updateProperty,\r\n    clearChanges,\r\n    exportCSS,\r\n    togglePanel,\r\n  ]);\r\n\r\n  return (\r\n    <InspectorContext.Provider value={value}>\r\n      {children}\r\n    </InspectorContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useInspector() {\r\n  const context = useContext(InspectorContext);\r\n  if (!context) {\r\n    throw new Error('useInspector must be used within InspectorProvider');\r\n  }\r\n  return context;\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\hooks\\useElementPicker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\types\\inspector.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\utils\\applyChanges.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":24,"column":23,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":24,"endColumn":26,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[515,518],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[515,518],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Apply Changes Utility\r\n * החלת שינויים בזמן אמת על אלמנטים\r\n */\r\n\r\nimport type { PropertyChange } from '../types/inspector';\r\n\r\n/**\r\n * מחיל שינוי בודד על אלמנט\r\n */\r\nexport function applyPropertyChange(\r\n  element: HTMLElement,\r\n  property: string,\r\n  value: string\r\n): void {\r\n  // אם זה CSS Variable - מעדכן ב-root\r\n  if (property.startsWith('--')) {\r\n    document.documentElement.style.setProperty(property, value);\r\n    return;\r\n  }\r\n  \r\n  // אחרת - מעדכן ישירות באלמנט\r\n  try {\r\n    (element.style as any)[property] = value;\r\n  } catch (error) {\r\n    console.warn(`Failed to apply ${property}: ${value}`, error);\r\n  }\r\n}\r\n\r\n/**\r\n * מחיל מספר שינויים על אלמנט\r\n */\r\nexport function applyMultipleChanges(\r\n  element: HTMLElement,\r\n  changes: PropertyChange[]\r\n): void {\r\n  changes.forEach(change => {\r\n    applyPropertyChange(element, change.property, change.newValue);\r\n  });\r\n}\r\n\r\n/**\r\n * מבטל שינוי בודד\r\n */\r\nexport function revertPropertyChange(\r\n  element: HTMLElement,\r\n  change: PropertyChange\r\n): void {\r\n  applyPropertyChange(element, change.property, change.oldValue);\r\n}\r\n\r\n/**\r\n * ייצוא שינויים ל-CSS\r\n */\r\nexport function generateCSSCode(\r\n  selector: string,\r\n  changes: PropertyChange[]\r\n): string {\r\n  if (changes.length === 0) {\r\n    return '';\r\n  }\r\n  \r\n  // הפרדה בין CSS Variables לבין properties רגילים\r\n  const variables = changes.filter(c => c.property.startsWith('--'));\r\n  const properties = changes.filter(c => !c.property.startsWith('--'));\r\n  \r\n  let css = '';\r\n  \r\n  // CSS Variables ב-:root\r\n  if (variables.length > 0) {\r\n    css += ':root {\\n';\r\n    variables.forEach(change => {\r\n      css += `  ${change.property}: ${change.newValue};\\n`;\r\n    });\r\n    css += '}\\n\\n';\r\n  }\r\n  \r\n  // Properties רגילים\r\n  if (properties.length > 0) {\r\n    css += `${selector} {\\n`;\r\n    properties.forEach(change => {\r\n      // המרת camelCase ל-kebab-case\r\n      const kebabProperty = change.property.replace(\r\n        /[A-Z]/g,\r\n        letter => `-${letter.toLowerCase()}`\r\n      );\r\n      css += `  ${kebabProperty}: ${change.newValue};\\n`;\r\n    });\r\n    css += '}\\n';\r\n  }\r\n  \r\n  return css;\r\n}\r\n\r\n/**\r\n * העתקת טקסט ל-clipboard\r\n */\r\nexport async function copyToClipboard(text: string): Promise<boolean> {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Failed to copy to clipboard:', error);\r\n    return false;\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\features\\element-inspector\\utils\\extractProperties.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\hooks\\use-mobile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\hooks\\use-toast.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\hooks\\useDebounce.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\hooks\\useKeyboardShortcuts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\hooks\\useLazySearch.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":49,"column":52,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":49,"endColumn":55,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1675,1678],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1675,1678],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { FlatPasuk, Sefer } from \"@/types/torah\";\r\nimport { getCachedSefer } from \"@/utils/indexedDB\";\r\nimport { fixJsonContent } from \"@/utils/fixData\";\r\n\r\nexport interface SearchFilters {\r\n  sefer?: number;\r\n  parsha?: number;\r\n  perek?: number;\r\n  searchType: \"all\" | \"pasuk\" | \"perush\";\r\n}\r\n\r\n// Cache for loaded sefarim used in search\r\nconst searchSeferCache = new Map<number, Sefer>();\r\n\r\nconst fixSefer = (sefer: Sefer): Sefer => {\r\n  const jsonString = JSON.stringify(sefer);\r\n  const fixedString = fixJsonContent(jsonString);\r\n  return JSON.parse(fixedString) as Sefer;\r\n};\r\n\r\nexport const useLazySearch = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filters, setFilters] = useState<SearchFilters>({ searchType: \"all\" });\r\n  const [results, setResults] = useState<FlatPasuk[]>([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [isLoadingSefarim, setIsLoadingSefarim] = useState(false);\r\n  const workerRef = useRef<Worker | null>(null);\r\n  const searchIdRef = useRef(0);\r\n\r\n  // Initialize worker\r\n  useEffect(() => {\r\n    workerRef.current = new Worker(\r\n      new URL('../workers/search.worker.ts', import.meta.url),\r\n      { type: 'module' }\r\n    );\r\n    \r\n    return () => workerRef.current?.terminate();\r\n  }, []);\r\n\r\n  // Load sefarim lazily when search opens\r\n  const loadSefarimForSearch = useCallback(async () => {\r\n    // If we already have all sefarim, skip\r\n    if (searchSeferCache.size === 5) return;\r\n\r\n    setIsLoadingSefarim(true);\r\n    \r\n    const seferFiles: Record<number, () => Promise<any>> = {\r\n      1: () => import('../data/bereishit.json'),\r\n      2: () => import('../data/shemot.json'),\r\n      3: () => import('../data/vayikra.json'),\r\n      4: () => import('../data/bamidbar.json'),\r\n      5: () => import('../data/devarim.json')\r\n    };\r\n\r\n    for (let seferId = 1; seferId <= 5; seferId++) {\r\n      if (!searchSeferCache.has(seferId)) {\r\n        try {\r\n          // Try IndexedDB first\r\n          const cached = await getCachedSefer(seferId);\r\n          if (cached) {\r\n            searchSeferCache.set(seferId, fixSefer(cached));\r\n            continue;\r\n          }\r\n\r\n          // Load from network\r\n          const seferModule = await seferFiles[seferId]();\r\n          const sefer = fixSefer(seferModule.default);\r\n          searchSeferCache.set(seferId, sefer);\r\n        } catch (error) {\r\n          console.error(`Failed to load sefer ${seferId} for search:`, error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    setIsLoadingSefarim(false);\r\n  }, []);\r\n\r\n  // Load sefarim when search opens\r\n  useEffect(() => {\r\n    if (isOpen && searchSeferCache.size < 5) {\r\n      loadSefarimForSearch();\r\n    }\r\n  }, [isOpen, loadSefarimForSearch]);\r\n\r\n  // Perform search\r\n  useEffect(() => {\r\n    const currentSearchId = ++searchIdRef.current;\r\n\r\n    const performSearch = async () => {\r\n      if (!query.trim()) {\r\n        setResults([]);\r\n        setIsSearching(false);\r\n        return;\r\n      }\r\n\r\n      // Wait for sefarim to load if needed\r\n      if (isLoadingSefarim) {\r\n        return;\r\n      }\r\n\r\n      setIsSearching(true);\r\n\r\n      if (!workerRef.current) {\r\n        setResults([]);\r\n        setIsSearching(false);\r\n        return;\r\n      }\r\n\r\n      // Create flat pesukim array from cached sefarim\r\n      const allPesukim: FlatPasuk[] = [];\r\n      for (let seferId = 1; seferId <= 5; seferId++) {\r\n        const sefer = searchSeferCache.get(seferId);\r\n        if (sefer) {\r\n          for (const parsha of sefer.parshiot) {\r\n            for (const perek of parsha.perakim) {\r\n              for (const pasuk of perek.pesukim) {\r\n                allPesukim.push({\r\n                  id: pasuk.id,\r\n                  sefer: sefer.sefer_id,\r\n                  sefer_name: sefer.sefer_name,\r\n                  perek: perek.perek_num,\r\n                  pasuk_num: pasuk.pasuk_num,\r\n                  text: pasuk.text,\r\n                  content: pasuk.content || [],\r\n                  parsha_id: parsha.parsha_id,\r\n                  parsha_name: parsha.parsha_name\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const timeout = setTimeout(() => {\r\n        if (searchIdRef.current === currentSearchId) {\r\n          setIsSearching(false);\r\n        }\r\n      }, 5000);\r\n\r\n      workerRef.current.onmessage = (e: MessageEvent) => {\r\n        if (searchIdRef.current === currentSearchId) {\r\n          clearTimeout(timeout);\r\n          setResults(e.data);\r\n          setIsSearching(false);\r\n        }\r\n      };\r\n\r\n      workerRef.current.onerror = (error) => {\r\n        console.error('Search worker error:', error);\r\n        if (searchIdRef.current === currentSearchId) {\r\n          clearTimeout(timeout);\r\n          setResults([]);\r\n          setIsSearching(false);\r\n        }\r\n      };\r\n\r\n      workerRef.current.postMessage({ pesukim: allPesukim, query, filters });\r\n    };\r\n\r\n    const timer = setTimeout(performSearch, 300);\r\n    \r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [query, filters, isLoadingSefarim]);\r\n\r\n  // Keyboard shortcuts\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if ((e.metaKey || e.ctrlKey) && e.key === \"k\") {\r\n        e.preventDefault();\r\n        setIsOpen(true);\r\n      }\r\n      if (e.key === \"Escape\" && isOpen) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [isOpen]);\r\n\r\n  const openSearch = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, []);\r\n\r\n  const closeSearch = useCallback(() => {\r\n    setIsOpen(false);\r\n    setQuery(\"\");\r\n    setResults([]);\r\n  }, []);\r\n\r\n  const clearSearch = useCallback(() => {\r\n    setQuery(\"\");\r\n    setFilters({ searchType: \"all\" });\r\n    setResults([]);\r\n  }, []);\r\n\r\n  return {\r\n    isOpen,\r\n    query,\r\n    filters,\r\n    results,\r\n    isSearching: isSearching || isLoadingSefarim,\r\n    openSearch,\r\n    closeSearch,\r\n    setQuery,\r\n    setFilters,\r\n    clearSearch,\r\n    availableSefarim: Array.from(searchSeferCache.values()),\r\n  };\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\hooks\\useQuickSelector.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\hooks\\useSearch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\lib\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\pages\\Index.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'loadSefer'. Either include it or remove the dependency array.","line":141,"column":6,"nodeType":"ArrayExpression","endLine":141,"endColumn":21,"suggestions":[{"desc":"Update the dependencies array to be: [loadSefer, selectedSefer]","fix":{"range":[5709,5724],"text":"[loadSefer, selectedSefer]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a missing dependency: 'seferData'. Either include it or remove the dependency array.","line":271,"column":6,"nodeType":"ArrayExpression","endLine":271,"endColumn":39,"suggestions":[{"desc":"Update the dependencies array to be: [flattenedPesukim, seferData, selectedPerek]","fix":{"range":[10155,10188],"text":"[flattenedPesukim, seferData, selectedPerek]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\pages\\NotFound.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\types\\bookmark.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\types\\search.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\types\\theme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\types\\torah.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\bookmarks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\cacheDebug.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\dataExport.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\fixData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\gitHistory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\hebrewNumbers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\indexedDB.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":16,"column":12,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":16,"endColumn":15,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[333,336],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[333,336],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":159,"column":50,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":159,"endColumn":53,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4206,4209],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4206,4209],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { openDB, DBSchema, IDBPDatabase } from 'idb';\r\nimport { Sefer } from '@/types/torah';\r\n\r\ninterface TorahDB extends DBSchema {\r\n  sefarim: {\r\n    key: number;\r\n    value: {\r\n      seferId: number;\r\n      data: Sefer;\r\n      timestamp: number;\r\n      version: string;\r\n    };\r\n  };\r\n  metadata: {\r\n    key: string;\r\n    value: any;\r\n  };\r\n}\r\n\r\nconst DB_NAME = 'torah-app-db';\r\nconst DB_VERSION = 1;\r\nconst CACHE_VERSION = '1.0.0'; // Increment to invalidate cache\r\nconst CACHE_DURATION = 7 * 24 * 60 * 60 * 1000; // 7 days in milliseconds\r\n\r\nlet dbInstance: IDBPDatabase<TorahDB> | null = null;\r\n\r\n/**\r\n * Initialize and get the IndexedDB instance\r\n */\r\nasync function getDB(): Promise<IDBPDatabase<TorahDB>> {\r\n  if (dbInstance) return dbInstance;\r\n\r\n  dbInstance = await openDB<TorahDB>(DB_NAME, DB_VERSION, {\r\n    upgrade(db) {\r\n      // Create object stores if they don't exist\r\n      if (!db.objectStoreNames.contains('sefarim')) {\r\n        db.createObjectStore('sefarim', { keyPath: 'seferId' });\r\n      }\r\n      if (!db.objectStoreNames.contains('metadata')) {\r\n        db.createObjectStore('metadata');\r\n      }\r\n    },\r\n  });\r\n\r\n  return dbInstance;\r\n}\r\n\r\n/**\r\n * Get cached sefer from IndexedDB\r\n */\r\nexport async function getCachedSefer(seferId: number): Promise<Sefer | null> {\r\n  try {\r\n    const db = await getDB();\r\n    const cached = await db.get('sefarim', seferId);\r\n\r\n    if (!cached) {\r\n      console.log(`[IndexedDB] Sefer ${seferId} not found in cache`);\r\n      return null;\r\n    }\r\n\r\n    // Check if cache is expired\r\n    const age = Date.now() - cached.timestamp;\r\n    if (age > CACHE_DURATION || cached.version !== CACHE_VERSION) {\r\n      console.log(`[IndexedDB] Sefer ${seferId} cache expired or outdated`);\r\n      await db.delete('sefarim', seferId);\r\n      return null;\r\n    }\r\n\r\n    console.log(`[IndexedDB] Sefer ${seferId} loaded from cache (age: ${Math.round(age / 1000 / 60)}m)`);\r\n    return cached.data;\r\n  } catch (error) {\r\n    console.error('[IndexedDB] Error getting cached sefer:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Cache sefer in IndexedDB\r\n */\r\nexport async function setCachedSefer(seferId: number, data: Sefer): Promise<void> {\r\n  try {\r\n    const db = await getDB();\r\n    await db.put('sefarim', {\r\n      seferId,\r\n      data,\r\n      timestamp: Date.now(),\r\n      version: CACHE_VERSION,\r\n    });\r\n    console.log(`[IndexedDB] Sefer ${seferId} cached successfully`);\r\n  } catch (error) {\r\n    console.error('[IndexedDB] Error caching sefer:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Check if all sefarim are cached\r\n */\r\nexport async function areAllSefarimCached(): Promise<boolean> {\r\n  try {\r\n    const db = await getDB();\r\n    const allKeys = await db.getAllKeys('sefarim');\r\n    return allKeys.length === 5; // We have 5 sefarim\r\n  } catch (error) {\r\n    console.error('[IndexedDB] Error checking cache status:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Get cache statistics\r\n */\r\nexport async function getCacheStats(): Promise<{\r\n  cachedCount: number;\r\n  totalSize: number;\r\n  oldestCache: number;\r\n}> {\r\n  try {\r\n    const db = await getDB();\r\n    const allSefarim = await db.getAll('sefarim');\r\n    \r\n    const totalSize = allSefarim.reduce((acc, item) => {\r\n      return acc + JSON.stringify(item.data).length;\r\n    }, 0);\r\n\r\n    const oldestCache = allSefarim.length > 0\r\n      ? Math.min(...allSefarim.map(s => s.timestamp))\r\n      : 0;\r\n\r\n    return {\r\n      cachedCount: allSefarim.length,\r\n      totalSize,\r\n      oldestCache,\r\n    };\r\n  } catch (error) {\r\n    console.error('[IndexedDB] Error getting cache stats:', error);\r\n    return { cachedCount: 0, totalSize: 0, oldestCache: 0 };\r\n  }\r\n}\r\n\r\n/**\r\n * Clear all cached data\r\n */\r\nexport async function clearCache(): Promise<void> {\r\n  try {\r\n    const db = await getDB();\r\n    await db.clear('sefarim');\r\n    console.log('[IndexedDB] Cache cleared successfully');\r\n  } catch (error) {\r\n    console.error('[IndexedDB] Error clearing cache:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Preload all sefarim into IndexedDB\r\n */\r\nexport async function preloadAllSefarimToCache(\r\n  onProgress?: (current: number, total: number) => void\r\n): Promise<void> {\r\n  const seferFiles: Record<number, () => Promise<any>> = {\r\n    1: () => import('../data/bereishit.json'),\r\n    2: () => import('../data/shemot.json'),\r\n    3: () => import('../data/vayikra.json'),\r\n    4: () => import('../data/bamidbar.json'),\r\n    5: () => import('../data/devarim.json'),\r\n  };\r\n\r\n  for (let seferId = 1; seferId <= 5; seferId++) {\r\n    try {\r\n      // Check if already cached\r\n      const cached = await getCachedSefer(seferId);\r\n      if (cached) {\r\n        console.log(`[IndexedDB] Sefer ${seferId} already cached, skipping`);\r\n        onProgress?.(seferId, 5);\r\n        continue;\r\n      }\r\n\r\n      // Load and cache\r\n      const seferModule = await seferFiles[seferId]();\r\n      await setCachedSefer(seferId, seferModule.default);\r\n      onProgress?.(seferId, 5);\r\n      \r\n      console.log(`[IndexedDB] Preloaded sefer ${seferId}`);\r\n    } catch (error) {\r\n      console.error(`[IndexedDB] Failed to preload sefer ${seferId}:`, error);\r\n    }\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\performanceMonitor.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":131,"column":58,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":131,"endColumn":61,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3263,3266],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3263,3266],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":139,"column":33,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":139,"endColumn":36,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3610,3613],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3610,3613],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":148,"column":50,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":148,"endColumn":53,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3964,3967],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3964,3967],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Performance monitoring utilities\r\n * Track and log performance metrics for optimization\r\n */\r\n\r\ninterface PerformanceMetric {\r\n  name: string;\r\n  duration: number;\r\n  timestamp: number;\r\n}\r\n\r\nclass PerformanceMonitor {\r\n  private metrics: PerformanceMetric[] = [];\r\n  private marks: Map<string, number> = new Map();\r\n\r\n  /**\r\n   * Start measuring a performance metric\r\n   */\r\n  start(name: string): void {\r\n    this.marks.set(name, performance.now());\r\n  }\r\n\r\n  /**\r\n   * End measuring and log the result\r\n   */\r\n  end(name: string): number | null {\r\n    const startTime = this.marks.get(name);\r\n    if (!startTime) {\r\n      console.warn(`[Perf] No start mark found for: ${name}`);\r\n      return null;\r\n    }\r\n\r\n    const duration = performance.now() - startTime;\r\n    const metric: PerformanceMetric = {\r\n      name,\r\n      duration,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    this.metrics.push(metric);\r\n    this.marks.delete(name);\r\n\r\n    // Log in development\r\n    if (import.meta.env.DEV) {\r\n      const color = duration < 100 ? 'green' : duration < 500 ? 'orange' : 'red';\r\n      console.log(\r\n        `%c[Perf] ${name}: ${duration.toFixed(2)}ms`,\r\n        `color: ${color}; font-weight: bold`\r\n      );\r\n    }\r\n\r\n    return duration;\r\n  }\r\n\r\n  /**\r\n   * Measure a function execution time\r\n   */\r\n  async measure<T>(name: string, fn: () => T | Promise<T>): Promise<T> {\r\n    this.start(name);\r\n    try {\r\n      const result = await fn();\r\n      this.end(name);\r\n      return result;\r\n    } catch (error) {\r\n      this.end(name);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all metrics\r\n   */\r\n  getMetrics(): PerformanceMetric[] {\r\n    return [...this.metrics];\r\n  }\r\n\r\n  /**\r\n   * Get average duration for a metric name\r\n   */\r\n  getAverage(name: string): number {\r\n    const filtered = this.metrics.filter((m) => m.name === name);\r\n    if (filtered.length === 0) return 0;\r\n    \r\n    const total = filtered.reduce((sum, m) => sum + m.duration, 0);\r\n    return total / filtered.length;\r\n  }\r\n\r\n  /**\r\n   * Clear all metrics\r\n   */\r\n  clear(): void {\r\n    this.metrics = [];\r\n    this.marks.clear();\r\n  }\r\n\r\n  /**\r\n   * Log summary of all metrics\r\n   */\r\n  logSummary(): void {\r\n    const grouped = this.metrics.reduce((acc, metric) => {\r\n      if (!acc[metric.name]) {\r\n        acc[metric.name] = [];\r\n      }\r\n      acc[metric.name].push(metric.duration);\r\n      return acc;\r\n    }, {} as Record<string, number[]>);\r\n\r\n    console.group('📊 Performance Summary');\r\n    Object.entries(grouped).forEach(([name, durations]) => {\r\n      const avg = durations.reduce((a, b) => a + b, 0) / durations.length;\r\n      const min = Math.min(...durations);\r\n      const max = Math.max(...durations);\r\n      console.log(`${name}:`, {\r\n        count: durations.length,\r\n        avg: `${avg.toFixed(2)}ms`,\r\n        min: `${min.toFixed(2)}ms`,\r\n        max: `${max.toFixed(2)}ms`,\r\n      });\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  /**\r\n   * Get Core Web Vitals\r\n   */\r\n  getCoreWebVitals(): void {\r\n    if ('PerformanceObserver' in window) {\r\n      // Largest Contentful Paint (LCP)\r\n      const lcpObserver = new PerformanceObserver((list) => {\r\n        const entries = list.getEntries();\r\n        const lastEntry = entries[entries.length - 1] as any;\r\n        console.log(`🎨 LCP: ${lastEntry.renderTime || lastEntry.loadTime}ms`);\r\n      });\r\n      lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });\r\n\r\n      // First Input Delay (FID)\r\n      const fidObserver = new PerformanceObserver((list) => {\r\n        const entries = list.getEntries();\r\n        entries.forEach((entry: any) => {\r\n          console.log(`⚡ FID: ${entry.processingStart - entry.startTime}ms`);\r\n        });\r\n      });\r\n      fidObserver.observe({ entryTypes: ['first-input'] });\r\n\r\n      // Cumulative Layout Shift (CLS)\r\n      let clsScore = 0;\r\n      const clsObserver = new PerformanceObserver((list) => {\r\n        for (const entry of list.getEntries() as any[]) {\r\n          if (!entry.hadRecentInput) {\r\n            clsScore += entry.value;\r\n          }\r\n        }\r\n        console.log(`📐 CLS: ${clsScore.toFixed(4)}`);\r\n      });\r\n      clsObserver.observe({ entryTypes: ['layout-shift'] });\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const perfMonitor = new PerformanceMonitor();\r\n\r\n// Auto-log web vitals in development\r\nif (import.meta.env.DEV) {\r\n  perfMonitor.getCoreWebVitals();\r\n  \r\n  // Log summary on page unload\r\n  window.addEventListener('beforeunload', () => {\r\n    perfMonitor.logSummary();\r\n  });\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\utils\\serviceWorkerRegistration.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\jj121\\Desktop\\torha14_10\\torah-qa-explorer-77783-35978-41929\\src\\workers\\search.worker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]